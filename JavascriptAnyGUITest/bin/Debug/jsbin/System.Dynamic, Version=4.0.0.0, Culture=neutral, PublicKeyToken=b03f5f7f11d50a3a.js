/* Generated by JSIL v0.7.9 build 22029. See http://jsil.org/ for more information. */ 
/* Generating type stubs only */ 
var $asm07 = JSIL.DeclareAssembly("System.Dynamic, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a");

JSIL.DeclareNamespace("System");
JSIL.DeclareNamespace("System.Dynamic");
/* class System.Dynamic.ArgBuilder */ 

(function ArgBuilder$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Object"), 
      Name: "System.Dynamic.ArgBuilder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Marshal", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MarshalToRef", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "UnmarshalFromRef", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.Assert */ 

(function Assert$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Dynamic.Assert", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "get_Unreachable", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:true , Public:false}, "IsTrue", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Func`1", [$.Boolean]))
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DEBUG"]; });

    $.ExternalMethod({Static:true , Public:false}, "NotEmpty", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DEBUG"]; });

    $.ExternalMethod({Static:true , Public:false}, "NotEmpty", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Collections.Generic.ICollection`1", ["!!0"])], ["T"])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DEBUG"]; });

    $.ExternalMethod({Static:true , Public:false}, "NotNull", 
      JSIL.MethodSignature.Action($.Object)
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DEBUG"]; });

    $.ExternalMethod({Static:true , Public:false}, "NotNull", 
      new JSIL.MethodSignature(null, [$.Object, $.Object])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DEBUG"]; });

    $.ExternalMethod({Static:true , Public:false}, "NotNull", 
      new JSIL.MethodSignature(null, [
          $.Object, $.Object, 
          $.Object
        ])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DEBUG"]; });

    $.ExternalMethod({Static:true , Public:false}, "NotNull", 
      new JSIL.MethodSignature(null, [
          $.Object, $.Object, 
          $.Object, $.Object
        ])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DEBUG"]; })
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1025:ReplaceRepetitiveArgumentsWithParamsArray"]; });

    $.ExternalMethod({Static:true , Public:false}, "NotNullItems", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"])], ["T"])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DEBUG"]; });

    $.Property({Static:true , Public:false}, "Unreachable", $asm0B.TypeRef("System.Exception"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.SimpleArgBuilder */ 

(function SimpleArgBuilder$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Dynamic.ArgBuilder"), 
      Name: "System.Dynamic.SimpleArgBuilder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Type"))
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_ParameterType", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Type"))
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Marshal", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "UnmarshalFromRef", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_parameterType", $asm0B.TypeRef("System.Type")); 
    $.Property({Static:false, Public:false}, "ParameterType", $asm0B.TypeRef("System.Type"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.BoolArgBuilder */ 

(function BoolArgBuilder$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Dynamic.SimpleArgBuilder"), 
      Name: "System.Dynamic.BoolArgBuilder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Type"))
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MarshalToRef", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "UnmarshalFromRef", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.BoundDispEvent */ 

(function BoundDispEvent$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Dynamic.DynamicObject"), 
      Name: "System.Dynamic.BoundDispEvent", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Object, $asm0B.TypeRef("System.Guid"), 
          $.Int32
        ])
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "InPlaceAdd", 
      new JSIL.MethodSignature($.Object, [$.Object])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "InPlaceSubtract", 
      new JSIL.MethodSignature($.Object, [$.Object])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "TryBinaryOperation", 
      new JSIL.MethodSignature($.Boolean, [
          $asm06.TypeRef("System.Dynamic.BinaryOperationBinder"), $.Object, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "VerifyHandler", 
      JSIL.MethodSignature.Action($.Object)
    );

    $.Field({Static:false, Public:false}, "_rcw", $.Object); 
    $.Field({Static:false, Public:false}, "_sourceIid", $asm0B.TypeRef("System.Guid")); 
    $.Field({Static:false, Public:false}, "_dispid", $.Int32); 
    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.CollectionExtensions */ 

(function CollectionExtensions$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Dynamic.CollectionExtensions", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "AddFirst", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", ["!!0"]), [$asm0B.TypeRef("System.Collections.Generic.IList`1", ["!!0"]), "!!0"], ["T"])
    )
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "AddLast", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", ["!!0"]), [$asm0B.TypeRef("System.Collections.Generic.IList`1", ["!!0"]), "!!0"], ["T"])
    )
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "RemoveFirst", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", ["!!0"]), [$jsilcore.TypeRef("System.Array", ["!!0"])], ["T"])
    )
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "ToArray", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", ["!!0"]), [$asm0B.TypeRef("System.Collections.Generic.IList`1", ["!!0"])], ["T"])
    )
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

})();

/* class System.Dynamic.ComBinder */ 

(function ComBinder$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Dynamic.ComBinder", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "GetDynamicDataMemberNames", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Collections.Generic.IList`1", [$.String]), [$.Object])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode"]; })
      .Attribute($asm0B.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetDynamicDataMembers", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]), [$.Object, $asm0B.TypeRef("System.Collections.Generic.IEnumerable`1", [$.String])])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1006:DoNotNestGenericTypesInMemberSignatures"]; })
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode"]; })
      .Attribute($asm0B.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "GetDynamicMemberNames", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Collections.Generic.IEnumerable`1", [$.String]), [$.Object])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "IsComObject", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:true }, "TryBindGetIndex", 
      new JSIL.MethodSignature($.Boolean, [
          $asm06.TypeRef("System.Dynamic.GetIndexBinder"), $asm06.TypeRef("System.Dynamic.DynamicMetaObject"), 
          $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")]), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")])
        ])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "TryBindGetMember", 
      new JSIL.MethodSignature($.Boolean, [
          $asm06.TypeRef("System.Dynamic.GetMemberBinder"), $asm06.TypeRef("System.Dynamic.DynamicMetaObject"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")]), $.Boolean
        ])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "TryBindGetMember", 
      new JSIL.MethodSignature($.Boolean, [
          $asm06.TypeRef("System.Dynamic.GetMemberBinder"), $asm06.TypeRef("System.Dynamic.DynamicMetaObject"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")])
        ])
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:true }, "TryBindInvoke", 
      new JSIL.MethodSignature($.Boolean, [
          $asm06.TypeRef("System.Dynamic.InvokeBinder"), $asm06.TypeRef("System.Dynamic.DynamicMetaObject"), 
          $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")]), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")])
        ])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "TryBindInvokeMember", 
      new JSIL.MethodSignature($.Boolean, [
          $asm06.TypeRef("System.Dynamic.InvokeMemberBinder"), $asm06.TypeRef("System.Dynamic.DynamicMetaObject"), 
          $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")]), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")])
        ])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "TryBindSetIndex", 
      new JSIL.MethodSignature($.Boolean, [
          $asm06.TypeRef("System.Dynamic.SetIndexBinder"), $asm06.TypeRef("System.Dynamic.DynamicMetaObject"), 
          $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")]), $asm06.TypeRef("System.Dynamic.DynamicMetaObject"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")])
        ])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "TryBindSetMember", 
      new JSIL.MethodSignature($.Boolean, [
          $asm06.TypeRef("System.Dynamic.SetMemberBinder"), $asm06.TypeRef("System.Dynamic.DynamicMetaObject"), 
          $asm06.TypeRef("System.Dynamic.DynamicMetaObject"), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")])
        ])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "TryConvert", 
      new JSIL.MethodSignature($.Boolean, [
          $asm06.TypeRef("System.Dynamic.ConvertBinder"), $asm06.TypeRef("System.Dynamic.DynamicMetaObject"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")])
        ])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "TryGetMetaObject", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")])])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.ComBinder+ComGetMemberBinder */ 

(function ComGetMemberBinder$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Dynamic.GetMemberBinder"), 
      Name: "System.Dynamic.ComBinder+ComGetMemberBinder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Dynamic.GetMemberBinder"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FallbackGetMember", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm06.TypeRef("System.Dynamic.DynamicMetaObject"), $asm06.TypeRef("System.Dynamic.DynamicMetaObject")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_originalBinder", $asm06.TypeRef("System.Dynamic.GetMemberBinder")); 
    $.Field({Static:false, Public:false}, "_CanReturnCallables", $.Boolean); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.ComBinderHelpers */ 

(function ComBinderHelpers$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Dynamic.ComBinderHelpers", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "GetTypeRestrictionForDynamicMetaObject", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.BindingRestrictions"), [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsByRef", 
      new JSIL.MethodSignature($.Boolean, [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsStrongBoxArg", 
      new JSIL.MethodSignature($.Boolean, [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")])
    );

    $.ExternalMethod({Static:true , Public:false}, "PreferPut", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Type"), $.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "ProcessArgumentsForCom", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.Boolean]), [$jsilcore.TypeRef("JSIL.Reference", [$jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")])])])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.ComDispIds */ 

(function ComDispIds$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Dynamic.ComDispIds", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Constant({Static:true , Public:false}, "DISPID_VALUE", 0); 
    $.Constant({Static:true , Public:false}, "DISPID_PROPERTYPUT", -3); 
    $.Constant({Static:true , Public:false}, "DISPID_NEWENUM", -4); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.ComEventDesc */ 

(function ComEventDesc$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Object"), 
      Name: "System.Dynamic.ComEventDesc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false}, "sourceIID", $asm0B.TypeRef("System.Guid")); 
    $.Field({Static:false, Public:false}, "dispid", $.Int32); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.ComEventSink */ 

(function ComEventSink$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.MarshalByRefObject"), 
      Name: "System.Dynamic.ComEventSink", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.Object, $asm0B.TypeRef("System.Guid")])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "AddHandler", 
      new JSIL.MethodSignature(null, [$.Int32, $.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm0B.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "DisposeAll", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "ExecuteHandler", 
      new JSIL.MethodSignature($.Object, [$.String, $jsilcore.TypeRef("System.Array", [$.Object])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm0B.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "FindSinkMethod", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Dynamic.ComEventSink+ComEventSinkMethod"), [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "FromRuntimeCallableWrapper", 
      new JSIL.MethodSignature($.Type, [
          $.Object, $asm0B.TypeRef("System.Guid"), 
          $.Boolean
        ])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_UnderlyingSystemType", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetField", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Reflection.FieldInfo"), [$.String, $asm0B.TypeRef("System.Reflection.BindingFlags")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetFields", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Reflection.FieldInfo")]), [$asm0B.TypeRef("System.Reflection.BindingFlags")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetMember", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Reflection.MemberInfo")]), [$.String, $asm0B.TypeRef("System.Reflection.BindingFlags")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetMembers", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Reflection.MemberInfo")]), [$asm0B.TypeRef("System.Reflection.BindingFlags")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetMethod", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Reflection.MethodInfo"), [$.String, $asm0B.TypeRef("System.Reflection.BindingFlags")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetMethod", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Reflection.MethodInfo"), [
          $.String, $asm0B.TypeRef("System.Reflection.BindingFlags"), 
          $asm0B.TypeRef("System.Reflection.Binder"), $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Type")]), 
          $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Reflection.ParameterModifier")])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetMethods", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Reflection.MethodInfo")]), [$asm0B.TypeRef("System.Reflection.BindingFlags")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetProperties", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Reflection.PropertyInfo")]), [$asm0B.TypeRef("System.Reflection.BindingFlags")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetProperty", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Reflection.PropertyInfo"), [
          $.String, $asm0B.TypeRef("System.Reflection.BindingFlags"), 
          $asm0B.TypeRef("System.Reflection.Binder"), $asm0B.TypeRef("System.Type"), 
          $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Type")]), $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Reflection.ParameterModifier")])
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetProperty", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Reflection.PropertyInfo"), [$.String, $asm0B.TypeRef("System.Reflection.BindingFlags")])
    );

    $.ExternalMethod({Static:false, Public:false}, "Initialize", 
      new JSIL.MethodSignature(null, [$.Object, $asm0B.TypeRef("System.Guid")])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "InvokeMember", 
      new JSIL.MethodSignature($.Object, [
          $.String, $asm0B.TypeRef("System.Reflection.BindingFlags"), 
          $asm0B.TypeRef("System.Reflection.Binder"), $.Object, 
          $jsilcore.TypeRef("System.Array", [$.Object]), $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Reflection.ParameterModifier")]), 
          $asm0B.TypeRef("System.Globalization.CultureInfo"), $jsilcore.TypeRef("System.Array", [$.String])
        ])
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "RemoveHandler", 
      new JSIL.MethodSignature(null, [$.Int32, $.Object])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:false}, "_sourceIid", $asm0B.TypeRef("System.Guid")); 
    $.Field({Static:false, Public:false}, "_connectionPoint", $asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.IConnectionPoint")); 
    $.Field({Static:false, Public:false}, "_adviseCookie", $.Int32); 
    $.Field({Static:false, Public:false}, "_comEventSinkMethods", $asm0B.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Dynamic.ComEventSink+ComEventSinkMethod")])); 
    $.Field({Static:false, Public:false}, "_lockObject", $.Object); 
    $.Property({Static:false, Public:true , Virtual:true }, "UnderlyingSystemType", $asm0B.TypeRef("System.Type"));

    $.ImplementInterfaces(
      /* 0 */ $asm0B.TypeRef("System.Reflection.IReflect"), 
      /* 1 */ $asm0B.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.ComEventSink+ComEventSinkMethod */ 

(function ComEventSinkMethod$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Object"), 
      Name: "System.Dynamic.ComEventSink+ComEventSinkMethod", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.Field({Static:false, Public:true }, "_name", $.String); 
    $.Field({Static:false, Public:true }, "_handlers", $asm0B.TypeRef("System.Func`2", [$jsilcore.TypeRef("System.Array", [$.Object]), $.Object])); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.ComEventSink+<>c__DisplayClass4 */ 

(function $l$gc__DisplayClass4$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Object"), 
      Name: "System.Dynamic.ComEventSink+<>c__DisplayClass4", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true }, "$lFindSinkMethod$gb__3", 
      new JSIL.MethodSignature($.Boolean, [$asm07.TypeRef("System.Dynamic.ComEventSink+ComEventSinkMethod")])
    );

    $.Field({Static:false, Public:true }, "$name", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Dynamic.ComEventSinkProxy */ 

(function ComEventSinkProxy$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Runtime.Remoting.Proxies.RealProxy"), 
      Name: "System.Dynamic.ComEventSinkProxy", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm07.TypeRef("System.Dynamic.ComEventSink"), $asm0B.TypeRef("System.Guid")])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Invoke", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Runtime.Remoting.Messaging.IMessage"), [$asm0B.TypeRef("System.Runtime.Remoting.Messaging.IMessage")])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "SupportsInterface", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.IntPtr"), [$jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Guid")])])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:false}, "_sinkIid", $asm0B.TypeRef("System.Guid")); 
    $.Field({Static:false, Public:false}, "_sink", $asm07.TypeRef("System.Dynamic.ComEventSink")); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "_methodInfoInvokeMember", $asm0B.TypeRef("System.Reflection.MethodInfo")); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

})();

/* class System.Dynamic.ComEventSinksContainer */ 

(function ComEventSinksContainer$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Collections.Generic.List`1", [$asm07.TypeRef("System.Dynamic.ComEventSink")]), 
      Name: "System.Dynamic.ComEventSinksContainer", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm0B.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "DisposeAll", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Finalize", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm0B.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "FromRuntimeCallableWrapper", 
      new JSIL.MethodSignature($.Type, [$.Object, $.Boolean])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Usage", "CA2201:DoNotRaiseReservedExceptionTypes"]; })
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1002:DoNotExposeGenericLists"]; })
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "_ComObjectEventSinksKey", $.Object); 
    $.ImplementInterfaces(
      /* 8 */ $asm0B.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.ComFallbackMetaObject */ 

(function ComFallbackMetaObject$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Dynamic.DynamicMetaObject"), 
      Name: "System.Dynamic.ComFallbackMetaObject", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.Linq.Expressions.Expression"), $asm06.TypeRef("System.Dynamic.BindingRestrictions"), 
          $.Object
        ])
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BindGetIndex", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm06.TypeRef("System.Dynamic.GetIndexBinder"), $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BindGetMember", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm06.TypeRef("System.Dynamic.GetMemberBinder")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BindInvokeMember", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm06.TypeRef("System.Dynamic.InvokeMemberBinder"), $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BindSetIndex", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [
          $asm06.TypeRef("System.Dynamic.SetIndexBinder"), $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")]), 
          $asm06.TypeRef("System.Dynamic.DynamicMetaObject")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BindSetMember", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm06.TypeRef("System.Dynamic.SetMemberBinder"), $asm06.TypeRef("System.Dynamic.DynamicMetaObject")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "UnwrapSelf", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Dynamic.ComUnwrappedMetaObject"))
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.ComUnwrappedMetaObject */ 

(function ComUnwrappedMetaObject$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Dynamic.DynamicMetaObject"), 
      Name: "System.Dynamic.ComUnwrappedMetaObject", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.Linq.Expressions.Expression"), $asm06.TypeRef("System.Dynamic.BindingRestrictions"), 
          $.Object
        ])
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.ComHresults */ 

(function ComHresults$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Dynamic.ComHresults", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "IsSuccess", 
      new JSIL.MethodSignature($.Boolean, [$.Int32])
    );

    $.Constant({Static:true , Public:false}, "S_OK", 0); 
    $.Constant({Static:true , Public:false}, "CONNECT_E_NOCONNECTION", -2147220992); 
    $.Constant({Static:true , Public:false}, "DISP_E_UNKNOWNINTERFACE", -2147352575); 
    $.Constant({Static:true , Public:false}, "DISP_E_MEMBERNOTFOUND", -2147352573); 
    $.Constant({Static:true , Public:false}, "DISP_E_PARAMNOTFOUND", -2147352572); 
    $.Constant({Static:true , Public:false}, "DISP_E_TYPEMISMATCH", -2147352571); 
    $.Constant({Static:true , Public:false}, "DISP_E_UNKNOWNNAME", -2147352570); 
    $.Constant({Static:true , Public:false}, "DISP_E_NONAMEDARGS", -2147352569); 
    $.Constant({Static:true , Public:false}, "DISP_E_BADVARTYPE", -2147352568); 
    $.Constant({Static:true , Public:false}, "DISP_E_EXCEPTION", -2147352567); 
    $.Constant({Static:true , Public:false}, "DISP_E_OVERFLOW", -2147352566); 
    $.Constant({Static:true , Public:false}, "DISP_E_BADINDEX", -2147352565); 
    $.Constant({Static:true , Public:false}, "DISP_E_UNKNOWNLCID", -2147352564); 
    $.Constant({Static:true , Public:false}, "DISP_E_ARRAYISLOCKED", -2147352563); 
    $.Constant({Static:true , Public:false}, "DISP_E_BADPARAMCOUNT", -2147352562); 
    $.Constant({Static:true , Public:false}, "DISP_E_PARAMNOTOPTIONAL", -2147352561); 
    $.Constant({Static:true , Public:false}, "E_NOINTERFACE", -2147467262); 
    $.Constant({Static:true , Public:false}, "E_FAIL", -2147467259); 
    $.Constant({Static:true , Public:false}, "TYPE_E_LIBNOTREGISTERED", -2147319779); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface System.Dynamic.IDispatchForReflection */ 

JSIL.MakeInterface(
  "System.Dynamic.IDispatchForReflection", false, [], function ($) {
  }, [])
  .Attribute($asm0B.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm0B.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIDispatch]; })
  .Attribute($asm0B.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["00020400-0000-0000-C000-000000000046"]; });

/* interface System.Dynamic.IDispatch */ 

JSIL.MakeInterface(
  "System.Dynamic.IDispatch", false, [], function ($) {
    $.Method({}, "TryGetTypeInfoCount", new JSIL.MethodSignature($.Int32, [$jsilcore.TypeRef("JSIL.Reference", [$.UInt32])]));
    $.Method({}, "TryGetTypeInfo", new JSIL.MethodSignature($.Int32, [
          $.UInt32, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.IntPtr")])
        ]));
    $.Method({}, "TryGetIDsOfNames", new JSIL.MethodSignature($.Int32, [
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Guid")]), $jsilcore.TypeRef("System.Array", [$.String]), 
          $.UInt32, $.Int32, 
          $jsilcore.TypeRef("System.Array", [$.Int32])
        ]));
    $.Method({}, "TryInvoke", new JSIL.MethodSignature($.Int32, [
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Guid")]), 
          $.Int32, $asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.INVOKEKIND"), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.DISPPARAMS")]), $jsilcore.TypeRef("JSIL.Reference", [$.Object]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.EXCEPINFO")]), $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])
        ]));
  }, [])
  .Attribute($asm0B.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm0B.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm0B.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["00020400-0000-0000-C000-000000000046"]; })
  .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

/* enum System.Dynamic.IDispatchMethodIndices */ 

JSIL.MakeEnum(
  "System.Dynamic.IDispatchMethodIndices", false, {
    IUnknown_QueryInterface: 0, 
    IUnknown_AddRef: 1, 
    IUnknown_Release: 2, 
    IDispatch_GetTypeInfoCount: 3, 
    IDispatch_GetTypeInfo: 4, 
    IDispatch_GetIDsOfNames: 5, 
    IDispatch_Invoke: 6
  }, false
);

/* interface System.Dynamic.IDispatchEx */ 

JSIL.MakeInterface(
  "System.Dynamic.IDispatchEx", false, [], function ($) {
    $.Method({}, "DeleteMemberByDispID", new JSIL.MethodSignature($.Int32, [$.Int32]));
    $.Method({}, "DeleteMemberByName", new JSIL.MethodSignature($.Int32, [$.String, $.UInt32]));
    $.Method({}, "GetDispID", new JSIL.MethodSignature($.Int32, [
          $.String, $.UInt32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "GetMemberName", new JSIL.MethodSignature($.Int32, [$.Int32, $jsilcore.TypeRef("JSIL.Reference", [$.String])]));
    $.Method({}, "GetMemberProperties", new JSIL.MethodSignature(null, [
          $.Int32, $.UInt32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])
        ]));
    $.Method({}, "GetNameSpaceParent", JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Object])));
    $.Method({}, "GetNextDispID", new JSIL.MethodSignature(null, [
          $.UInt32, $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]));
    $.Method({}, "InvokeEx", new JSIL.MethodSignature(null, [
          $.Int32, $.UInt32, 
          $.UInt32, $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.DISPPARAMS")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object]), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.EXCEPINFO")]), 
          $asm0B.TypeRef("System.IServiceProvider")
        ]));
  }, [])
  .Attribute($asm0B.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm0B.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIDispatch]; })
  .Attribute($asm0B.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["A6EF9860-C720-11D0-9337-00A0C90DCAA9"]; });

/* interface System.Dynamic.IProvideClassInfo */ 

JSIL.MakeInterface(
  "System.Dynamic.IProvideClassInfo", false, [], function ($) {
    $.Method({}, "GetClassInfo", JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.IntPtr")])));
  }, [])
  .Attribute($asm0B.TypeRef("System.Runtime.InteropServices.InterfaceTypeAttribute"), function () { return [$asm0B.System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown]; })
  .Attribute($asm0B.TypeRef("System.Runtime.InteropServices.GuidAttribute"), function () { return ["B196B283-BAB4-101A-B69C-00AA00341D07"]; });

/* class System.Dynamic.ComInvokeAction */ 

(function ComInvokeAction$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Dynamic.InvokeBinder"), 
      Name: "System.Dynamic.ComInvokeAction", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Dynamic.CallInfo"))
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "FallbackInvoke", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [
          $asm06.TypeRef("System.Dynamic.DynamicMetaObject"), $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")]), 
          $asm06.TypeRef("System.Dynamic.DynamicMetaObject")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.SplatInvokeBinder */ 

(function SplatInvokeBinder$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Runtime.CompilerServices.CallSiteBinder"), 
      Name: "System.Dynamic.SplatInvokeBinder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Bind", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [
          $jsilcore.TypeRef("System.Array", [$.Object]), $asm0B.TypeRef("System.Collections.ObjectModel.ReadOnlyCollection`1", [$asm06.TypeRef("System.Linq.Expressions.ParameterExpression")]), 
          $asm06.TypeRef("System.Linq.Expressions.LabelTarget")
        ])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "Instance", $.Type); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.ComInvokeBinder */ 

(function ComInvokeBinder$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Object"), 
      Name: "System.Dynamic.ComInvokeBinder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 7, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.Dynamic.CallInfo"), $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")]), 
          $jsilcore.TypeRef("System.Array", [$.Boolean]), $asm06.TypeRef("System.Dynamic.BindingRestrictions"), 
          $asm06.TypeRef("System.Linq.Expressions.Expression"), $asm06.TypeRef("System.Linq.Expressions.Expression"), 
          $asm07.TypeRef("System.Dynamic.ComMethodDesc")
        ])
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:false}, "AddNotNull", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("System.Linq.Expressions.ParameterExpression")]), $asm06.TypeRef("System.Linq.Expressions.ParameterExpression")])
    );

    $.ExternalMethod({Static:false, Public:false}, "CreateScope", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:true , Public:false}, "EnsureVariable", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.ParameterExpression"), [
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Linq.Expressions.ParameterExpression")]), $asm0B.TypeRef("System.Type"), 
          $.String
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateFinallyBlock", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Linq.Expressions.Expression"))
    );

    $.ExternalMethod({Static:false, Public:false}, "GenerateTryBlock", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Linq.Expressions.Expression"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_DispatchObjectVariable", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Linq.Expressions.ParameterExpression"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_DispatchPointerVariable", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Linq.Expressions.ParameterExpression"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_DispIdsOfKeywordArgsPinnedVariable", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Linq.Expressions.ParameterExpression"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_DispIdVariable", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Linq.Expressions.ParameterExpression"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_DispParamsVariable", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Linq.Expressions.ParameterExpression"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_InvokeResultVariable", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Linq.Expressions.ParameterExpression"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ParamVariantsVariable", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Linq.Expressions.ParameterExpression"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_PropertyPutDispIdVariable", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Linq.Expressions.ParameterExpression"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_ReturnValueVariable", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Linq.Expressions.ParameterExpression"))
    );

    $.ExternalMethod({Static:false, Public:false}, "Invoke", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Dynamic.DynamicMetaObject"))
    );

    $.ExternalMethod({Static:false, Public:false}, "MakeArgumentExpressions", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Linq.Expressions.Expression")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "MakeIDispatchInvokeTarget", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Linq.Expressions.Expression"))
    );

    $.ExternalMethod({Static:true , Public:false}, "MarshalType", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Type"), [$asm06.TypeRef("System.Dynamic.DynamicMetaObject"), $.Boolean])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_methodDesc", $asm07.TypeRef("System.Dynamic.ComMethodDesc")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_method", $asm06.TypeRef("System.Linq.Expressions.Expression")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_dispatch", $asm06.TypeRef("System.Linq.Expressions.Expression")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_callInfo", $asm06.TypeRef("System.Dynamic.CallInfo")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_args", $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")])); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_isByRef", $jsilcore.TypeRef("System.Array", [$.Boolean])); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_instance", $asm06.TypeRef("System.Linq.Expressions.Expression")); 
    $.Field({Static:false, Public:false}, "_restrictions", $asm06.TypeRef("System.Dynamic.BindingRestrictions")); 
    $.Field({Static:false, Public:false}, "_varEnumSelector", $asm07.TypeRef("System.Dynamic.VarEnumSelector")); 
    $.Field({Static:false, Public:false}, "_keywordArgNames", $jsilcore.TypeRef("System.Array", [$.String])); 
    $.Field({Static:false, Public:false}, "_totalExplicitArgs", $.Int32); 
    $.Field({Static:false, Public:false}, "_dispatchObject", $asm06.TypeRef("System.Linq.Expressions.ParameterExpression")); 
    $.Field({Static:false, Public:false}, "_dispatchPointer", $asm06.TypeRef("System.Linq.Expressions.ParameterExpression")); 
    $.Field({Static:false, Public:false}, "_dispId", $asm06.TypeRef("System.Linq.Expressions.ParameterExpression")); 
    $.Field({Static:false, Public:false}, "_dispParams", $asm06.TypeRef("System.Linq.Expressions.ParameterExpression")); 
    $.Field({Static:false, Public:false}, "_paramVariants", $asm06.TypeRef("System.Linq.Expressions.ParameterExpression")); 
    $.Field({Static:false, Public:false}, "_invokeResult", $asm06.TypeRef("System.Linq.Expressions.ParameterExpression")); 
    $.Field({Static:false, Public:false}, "_returnValue", $asm06.TypeRef("System.Linq.Expressions.ParameterExpression")); 
    $.Field({Static:false, Public:false}, "_dispIdsOfKeywordArgsPinned", $asm06.TypeRef("System.Linq.Expressions.ParameterExpression")); 
    $.Field({Static:false, Public:false}, "_propertyPutDispId", $asm06.TypeRef("System.Linq.Expressions.ParameterExpression")); 
    $.Property({Static:false, Public:false}, "DispatchObjectVariable", $asm06.TypeRef("System.Linq.Expressions.ParameterExpression"));

    $.Property({Static:false, Public:false}, "DispatchPointerVariable", $asm06.TypeRef("System.Linq.Expressions.ParameterExpression"));

    $.Property({Static:false, Public:false}, "DispIdVariable", $asm06.TypeRef("System.Linq.Expressions.ParameterExpression"));

    $.Property({Static:false, Public:false}, "DispParamsVariable", $asm06.TypeRef("System.Linq.Expressions.ParameterExpression"));

    $.Property({Static:false, Public:false}, "InvokeResultVariable", $asm06.TypeRef("System.Linq.Expressions.ParameterExpression"));

    $.Property({Static:false, Public:false}, "ReturnValueVariable", $asm06.TypeRef("System.Linq.Expressions.ParameterExpression"));

    $.Property({Static:false, Public:false}, "DispIdsOfKeywordArgsPinnedVariable", $asm06.TypeRef("System.Linq.Expressions.ParameterExpression"));

    $.Property({Static:false, Public:false}, "PropertyPutDispIdVariable", $asm06.TypeRef("System.Linq.Expressions.ParameterExpression"));

    $.Property({Static:false, Public:false}, "ParamVariantsVariable", $asm06.TypeRef("System.Linq.Expressions.ParameterExpression"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.ComMetaObject */ 

(function ComMetaObject$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Dynamic.DynamicMetaObject"), 
      Name: "System.Dynamic.ComMetaObject", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.Linq.Expressions.Expression"), $asm06.TypeRef("System.Dynamic.BindingRestrictions"), 
          $.Object
        ])
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BindGetIndex", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm06.TypeRef("System.Dynamic.GetIndexBinder"), $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BindGetMember", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm06.TypeRef("System.Dynamic.GetMemberBinder")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BindInvoke", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm06.TypeRef("System.Dynamic.InvokeBinder"), $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BindInvokeMember", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm06.TypeRef("System.Dynamic.InvokeMemberBinder"), $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BindSetIndex", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [
          $asm06.TypeRef("System.Dynamic.SetIndexBinder"), $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")]), 
          $asm06.TypeRef("System.Dynamic.DynamicMetaObject")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BindSetMember", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm06.TypeRef("System.Dynamic.SetMemberBinder"), $asm06.TypeRef("System.Dynamic.DynamicMetaObject")])
    );

    $.ExternalMethod({Static:false, Public:false}, "WrapSelf", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Dynamic.DynamicMetaObject"))
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.ComMethodDesc */ 

(function ComMethodDesc$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Object"), 
      Name: "System.Dynamic.ComMethodDesc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.Int32])
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.Int32, 
          $asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.INVOKEKIND")
        ])
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.ITypeInfo"), $asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.FUNCDESC")])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DispId", 
      JSIL.MethodSignature.Return($.Int32)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"))
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_IsDataMember", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsPropertyGet", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsPropertyPut", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_IsPropertyPutRef", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_ParamCount", 
      JSIL.MethodSignature.Return($.Int32)
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.Field({Static:false, Public:false, ReadOnly:true }, "_memid", $.Int32); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_name", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "InvokeKind", $asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.INVOKEKIND")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_paramCnt", $.Int32); 
    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "DispId", $.Int32);

    $.Property({Static:false, Public:true }, "IsPropertyGet", $.Boolean);

    $.Property({Static:false, Public:true }, "IsDataMember", $.Boolean);

    $.Property({Static:false, Public:true }, "IsPropertyPut", $.Boolean);

    $.Property({Static:false, Public:true }, "IsPropertyPutRef", $.Boolean);

    $.Property({Static:false, Public:false}, "ParamCount", $.Int32);

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Dynamic.ComObject */ 

(function ComObject$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Object"), 
      Name: "System.Dynamic.ComObject", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Object)
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:false}, "CreateComObject", 
      new JSIL.MethodSignature($.Type, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:false}, "get_RuntimeCallableWrapper", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"))
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetMemberNames", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Collections.Generic.IList`1", [$.String]), [$.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetMembers", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]), [$asm0B.TypeRef("System.Collections.Generic.IEnumerable`1", [$.String])])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsComObject", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "ObjectToComObject", 
      new JSIL.MethodSignature($.Type, [$.Object])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Usage", "CA2201:DoNotRaiseReservedExceptionTypes"]; })
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "RcwFromComObject", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.MemberExpression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:true , Public:false}, "RcwToComObject", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.MethodCallExpression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    )
      .Overrides($asm06.TypeRef("System.Dynamic.IDynamicMetaObjectProvider"), "GetMetaObject");

    $.Field({Static:false, Public:false, ReadOnly:true }, "_rcw", $.Object); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "_ComObjectInfoKey", $.Object); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "ComObjectType", $asm0B.TypeRef("System.Type")); 
    $.Property({Static:false, Public:false}, "RuntimeCallableWrapper", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Dynamic.IDynamicMetaObjectProvider")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Dynamic.ComRuntimeHelpers */ 

(function ComRuntimeHelpers$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Dynamic.ComRuntimeHelpers", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "CheckIfMissingTypeInfoIsExpected", 
      new JSIL.MethodSignature(null, [$.Int32, $.Boolean])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "CheckThrowException", 
      new JSIL.MethodSignature(null, [
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Dynamic.ExcepInfo")]), 
          $.UInt32, $.String
        ])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Usage", "CA2201:DoNotRaiseReservedExceptionTypes"]; })
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1045:DoNotPassTypesByReference"]; })
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "CreateComEvent", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Dynamic.BoundDispEvent"), [
          $.Object, $asm0B.TypeRef("System.Guid"), 
          $.Int32
        ])
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "CreateDispCallable", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Dynamic.DispCallable"), [$asm07.TypeRef("System.Dynamic.IDispatchComObject"), $asm07.TypeRef("System.Dynamic.ComMethodDesc")])
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetInfoFromType", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.ITypeInfo"), $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetITypeInfoFromIDispatch", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.ITypeInfo"), [$asm07.TypeRef("System.Dynamic.IDispatch"), $.Boolean])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetNameOfLib", 
      new JSIL.MethodSignature($.String, [$asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.ITypeLib")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetNameOfMethod", 
      new JSIL.MethodSignature($.String, [$asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.ITypeInfo"), $.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetNameOfType", 
      new JSIL.MethodSignature($.String, [$asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.ITypeInfo")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetTypeAttrForTypeInfo", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.TYPEATTR"), [$asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.ITypeInfo")])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Usage", "CA2201:DoNotRaiseReservedExceptionTypes"]; })
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetTypeAttrForTypeLib", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.TYPELIBATTR"), [$asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.ITypeLib")])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Usage", "CA2201:DoNotRaiseReservedExceptionTypes"]; });

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Dynamic.UnsafeMethods */ 

(function UnsafeMethods$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Dynamic.UnsafeMethods", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "AssertByrefPointsToStack", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.IntPtr"))
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.ConditionalAttribute"), function () { return ["DEBUG"]; })
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "ConvertByteByrefToPtr", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.IntPtr"), [$jsilcore.TypeRef("JSIL.Reference", [$.Byte])])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1045:DoNotPassTypesByReference"]; })
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "ConvertDecimalByrefToPtr", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.IntPtr"), [$jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Decimal")])])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1045:DoNotPassTypesByReference"]; })
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "ConvertDoubleByrefToPtr", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.IntPtr"), [$jsilcore.TypeRef("JSIL.Reference", [$.Double])])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1045:DoNotPassTypesByReference"]; });

    $.ExternalMethod({Static:true , Public:false}, "ConvertInt16ByrefToPtr", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.IntPtr"), [$jsilcore.TypeRef("JSIL.Reference", [$.Int16])])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1045:DoNotPassTypesByReference"]; })
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "ConvertInt32ByrefToPtr", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.IntPtr"), [$jsilcore.TypeRef("JSIL.Reference", [$.Int32])])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1045:DoNotPassTypesByReference"]; })
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "ConvertInt64ByrefToPtr", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.IntPtr"), [$jsilcore.TypeRef("JSIL.Reference", [$.Int64])])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1045:DoNotPassTypesByReference"]; });

    $.ExternalMethod({Static:true , Public:false}, "ConvertIntPtrByrefToPtr", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.IntPtr"), [$jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.IntPtr")])])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1045:DoNotPassTypesByReference"]; });

    $.ExternalMethod({Static:true , Public:false}, "ConvertSByteByrefToPtr", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.IntPtr"), [$jsilcore.TypeRef("JSIL.Reference", [$.SByte])])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1045:DoNotPassTypesByReference"]; })
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "ConvertSingleByrefToPtr", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.IntPtr"), [$jsilcore.TypeRef("JSIL.Reference", [$.Single])])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1045:DoNotPassTypesByReference"]; })
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "ConvertUInt16ByrefToPtr", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.IntPtr"), [$jsilcore.TypeRef("JSIL.Reference", [$.UInt16])])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1045:DoNotPassTypesByReference"]; });

    $.ExternalMethod({Static:true , Public:false}, "ConvertUInt32ByrefToPtr", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.IntPtr"), [$jsilcore.TypeRef("JSIL.Reference", [$.UInt32])])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1045:DoNotPassTypesByReference"]; });

    $.ExternalMethod({Static:true , Public:false}, "ConvertUInt64ByrefToPtr", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.IntPtr"), [$jsilcore.TypeRef("JSIL.Reference", [$.UInt64])])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1045:DoNotPassTypesByReference"]; })
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "ConvertUIntPtrByrefToPtr", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.IntPtr"), [$jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.UIntPtr")])])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1045:DoNotPassTypesByReference"]; })
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "ConvertVariantByrefToPtr", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.IntPtr"), [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Dynamic.Variant")])])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1045:DoNotPassTypesByReference"]; })
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "Create_IDispatchInvoke", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Dynamic.UnsafeMethods+IDispatchInvokeDelegate"), [$.Boolean])
    );

    $.ExternalMethod({Static:true , Public:false}, "Create_IUnknownRelease", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Dynamic.UnsafeMethods+IUnknownReleaseDelegate"))
    );

    $.ExternalMethod({Static:true , Public:false}, "EmitLoadArg", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Reflection.Emit.ILGenerator"), $.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "get__IDispatchInvokeNoResult", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Dynamic.UnsafeMethods+IDispatchInvokeDelegate"))
    );

    $.ExternalMethod({Static:true , Public:false}, "get_DynamicModule", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Reflection.Emit.ModuleBuilder"))
    );

    $.ExternalMethod({Static:true , Public:true }, "GetIdsOfNamedParameters", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.IntPtr"), [
          $asm07.TypeRef("System.Dynamic.IDispatch"), $jsilcore.TypeRef("System.Array", [$.String]), 
          $.Int32, $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Runtime.InteropServices.GCHandle")])
        ])
    )
      .Attribute($asm0B.TypeRef("System.ObsoleteAttribute"), function () { return ["do not use this method", true]; })
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetNullInterfaceId", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.IntPtr"))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "GetObjectForVariant", 
      new JSIL.MethodSignature($.Object, [$asm07.TypeRef("System.Dynamic.Variant")])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm0B.TypeRef("System.ObsoleteAttribute"), function () { return ["do not use this method", true]; })
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetVariantForObject", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Dynamic.Variant"), [$.Object])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "IDispatchInvoke", 
      new JSIL.MethodSignature($.Int32, [
          $asm0B.TypeRef("System.IntPtr"), $.Int32, 
          $asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.INVOKEKIND"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.DISPPARAMS")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Dynamic.Variant")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Dynamic.ExcepInfo")]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.UInt32])
        ])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1045:DoNotPassTypesByReference"]; })
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm0B.TypeRef("System.ObsoleteAttribute"), function () { return ["do not use this method", true]; })
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "InitVariantForObject", 
      new JSIL.MethodSignature(null, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Dynamic.Variant")])])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "IUnknownRelease", 
      new JSIL.MethodSignature($.Int32, [$asm0B.TypeRef("System.IntPtr")])
    )
      .Attribute($asm0B.TypeRef("System.ObsoleteAttribute"), function () { return ["do not use this method", true]; })
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:true , Public:true }, "IUnknownReleaseNotZero", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.IntPtr"))
    )
      .Attribute($asm0B.TypeRef("System.ObsoleteAttribute"), function () { return ["do not use this method", true]; })
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.Field({Static:true , Public:false, ReadOnly:true }, "_lock", $.Object); 
    $.Field({Static:true , Public:false}, "_dynamicModule", $asm0B.TypeRef("System.Reflection.Emit.ModuleBuilder")); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "_IUnknownRelease", $asm07.TypeRef("System.Dynamic.UnsafeMethods+IUnknownReleaseDelegate")); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "NullInterfaceId", $asm0B.TypeRef("System.IntPtr")); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "_IDispatchInvoke", $asm07.TypeRef("System.Dynamic.UnsafeMethods+IDispatchInvokeDelegate")); 
    $.Field({Static:true , Public:false}, "_IDispatchInvokeNoResultImpl", $asm07.TypeRef("System.Dynamic.UnsafeMethods+IDispatchInvokeDelegate")); 
    $.Constant({Static:true , Public:false}, "_dummyMarker", 269488144); 
    $.Property({Static:true , Public:false}, "DynamicModule", $asm0B.TypeRef("System.Reflection.Emit.ModuleBuilder"));

    $.Property({Static:true , Public:false}, "_IDispatchInvokeNoResult", $asm07.TypeRef("System.Dynamic.UnsafeMethods+IDispatchInvokeDelegate"));

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* delegate System.Dynamic.UnsafeMethods+IUnknownReleaseDelegate */ 

JSIL.MakeDelegate("System.Dynamic.UnsafeMethods+IUnknownReleaseDelegate", false, [], new JSIL.MethodSignature($asm0B.TypeRef("System.Int32"), [$asm0B.TypeRef("System.IntPtr")]));

/* delegate System.Dynamic.UnsafeMethods+IDispatchInvokeDelegate */ 

JSIL.MakeDelegate("System.Dynamic.UnsafeMethods+IDispatchInvokeDelegate", false, [], new JSIL.MethodSignature($asm0B.TypeRef("System.Int32"), [
      $asm0B.TypeRef("System.IntPtr"), $asm0B.TypeRef("System.Int32"), 
      $asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.INVOKEKIND"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.DISPPARAMS")]), 
      $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Dynamic.Variant")]), $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Dynamic.ExcepInfo")]), 
      $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.UInt32")])
    ]));

/* class System.Dynamic.NativeMethods */ 

(function NativeMethods$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Dynamic.NativeMethods", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "VariantClear", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.IntPtr"))
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.ComTypeDesc */ 

(function ComTypeDesc$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Object"), 
      Name: "System.Dynamic.ComTypeDesc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.ITypeInfo"))
    );

    $.ExternalMethod({Static:false, Public:false}, "AddFunc", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Dynamic.ComMethodDesc")])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddPut", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Dynamic.ComMethodDesc")])
    );

    $.ExternalMethod({Static:false, Public:false}, "AddPutRef", 
      new JSIL.MethodSignature(null, [$.String, $asm07.TypeRef("System.Dynamic.ComMethodDesc")])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateEmptyTypeDesc", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureGetItem", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Dynamic.ComMethodDesc"))
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureSetItem", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Dynamic.ComMethodDesc"))
    );

    $.ExternalMethod({Static:true , Public:false}, "FromITypeInfo", 
      new JSIL.MethodSignature($.Type, [$asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.ITypeInfo"), $asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.TYPEATTR")])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "get_EmptyEvents", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Dynamic.ComEventDesc")]))
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_Events", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Dynamic.ComEventDesc")]))
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_Funcs", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Collections.Hashtable"))
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_GetItem", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Dynamic.ComMethodDesc"))
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_Guid", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Guid"))
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_SetItem", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Dynamic.ComMethodDesc"))
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "get_TypeName", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "GetMemberNames", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.String]), [$.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "set_Events", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Dynamic.ComEventDesc")]))
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "set_Funcs", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Collections.Hashtable"))
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "set_Guid", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Guid"))
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "set_PutRefs", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Collections.Hashtable"))
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "set_Puts", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Collections.Hashtable"))
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "TryGetEvent", 
      new JSIL.MethodSignature($.Boolean, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Dynamic.ComEventDesc")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetFunc", 
      new JSIL.MethodSignature($.Boolean, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Dynamic.ComMethodDesc")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetPut", 
      new JSIL.MethodSignature($.Boolean, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Dynamic.ComMethodDesc")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetPutRef", 
      new JSIL.MethodSignature($.Boolean, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Dynamic.ComMethodDesc")])])
    );

    $.Field({Static:false, Public:false}, "_typeName", $.String); 
    $.Field({Static:false, Public:false}, "_documentation", $.String); 
    $.Field({Static:false, Public:false}, "_guid", $asm0B.TypeRef("System.Guid")); 
    $.Field({Static:false, Public:false}, "_funcs", $asm0B.TypeRef("System.Collections.Hashtable")); 
    $.Field({Static:false, Public:false}, "_puts", $asm0B.TypeRef("System.Collections.Hashtable")); 
    $.Field({Static:false, Public:false}, "_putRefs", $asm0B.TypeRef("System.Collections.Hashtable")); 
    $.Field({Static:false, Public:false}, "_getItem", $asm07.TypeRef("System.Dynamic.ComMethodDesc")); 
    $.Field({Static:false, Public:false}, "_setItem", $asm07.TypeRef("System.Dynamic.ComMethodDesc")); 
    $.Field({Static:false, Public:false}, "_events", $asm0B.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Dynamic.ComEventDesc")])); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "_EmptyEventsDict", $asm0B.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Dynamic.ComEventDesc")])); 
    $.Property({Static:true , Public:false}, "EmptyEvents", $asm0B.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Dynamic.ComEventDesc")]));

    $.Property({Static:false, Public:false}, "Funcs", $asm0B.TypeRef("System.Collections.Hashtable"));

    $.Property({Static:false, Public:false}, "Puts", $asm0B.TypeRef("System.Collections.Hashtable"));

    $.Property({Static:false, Public:false}, "PutRefs", $asm0B.TypeRef("System.Collections.Hashtable"));

    $.Property({Static:false, Public:false}, "Events", $asm0B.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Dynamic.ComEventDesc")]));

    $.Property({Static:false, Public:false}, "TypeName", $.String);

    $.Property({Static:false, Public:false}, "Guid", $asm0B.TypeRef("System.Guid"));

    $.Property({Static:false, Public:false}, "GetItem", $asm07.TypeRef("System.Dynamic.ComMethodDesc"));

    $.Property({Static:false, Public:false}, "SetItem", $asm07.TypeRef("System.Dynamic.ComMethodDesc"));

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Dynamic.ComTypeClassDesc */ 

(function ComTypeClassDesc$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Dynamic.ComTypeDesc"), 
      Name: "System.Dynamic.ComTypeClassDesc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.ITypeInfo"))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "AddInterface", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.ITypeInfo"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false}, "Implements", 
      new JSIL.MethodSignature($.Boolean, [$.String, $.Boolean])
    );

    $.Field({Static:false, Public:false}, "_itfs", $asm04.TypeRef("System.Collections.Generic.LinkedList`1", [$.String])); 
    $.Field({Static:false, Public:false}, "_sourceItfs", $asm04.TypeRef("System.Collections.Generic.LinkedList`1", [$.String])); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.ComTypeEnumDesc */ 

(function ComTypeEnumDesc$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Dynamic.ComTypeDesc"), 
      Name: "System.Dynamic.ComTypeEnumDesc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.ITypeInfo"))
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.ComTypeLibDesc */ 

(function ComTypeLibDesc$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Object"), 
      Name: "System.Dynamic.ComTypeLibDesc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GetCoClassForInterface", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Dynamic.ComTypeClassDesc"), [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetFromTypeLib", 
      new JSIL.MethodSignature($.Type, [$asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.ITypeLib")])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "_classes", $asm04.TypeRef("System.Collections.Generic.LinkedList`1", [$asm07.TypeRef("System.Dynamic.ComTypeClassDesc")])); 
    $.Field({Static:false, Public:false}, "_enums", $asm0B.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Dynamic.ComTypeEnumDesc")])); 
    $.Field({Static:false, Public:false}, "_typeLibName", $.String); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "_CachedTypeLibDesc", $asm0B.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Guid"), $.Type])); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.ContractUtils */ 

(function ContractUtils$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Dynamic.ContractUtils", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "Requires", 
      new JSIL.MethodSignature(null, [$.Boolean, $.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "Requires", 
      new JSIL.MethodSignature(null, [
          $.Boolean, $.String, 
          $.String
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "RequiresNotNull", 
      new JSIL.MethodSignature(null, [$.Object, $.String])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.ConversionArgBuilder */ 

(function ConversionArgBuilder$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Dynamic.ArgBuilder"), 
      Name: "System.Dynamic.ConversionArgBuilder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Type"), $asm07.TypeRef("System.Dynamic.SimpleArgBuilder")])
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Marshal", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MarshalToRef", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.Field({Static:false, Public:false}, "_innerBuilder", $asm07.TypeRef("System.Dynamic.SimpleArgBuilder")); 
    $.Field({Static:false, Public:false}, "_parameterType", $asm0B.TypeRef("System.Type")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.ConvertArgBuilder */ 

(function ConvertArgBuilder$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Dynamic.SimpleArgBuilder"), 
      Name: "System.Dynamic.ConvertArgBuilder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Type"), $asm0B.TypeRef("System.Type")])
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Marshal", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "UnmarshalFromRef", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_marshalType", $asm0B.TypeRef("System.Type")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.ConvertibleArgBuilder */ 

(function ConvertibleArgBuilder$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Dynamic.ArgBuilder"), 
      Name: "System.Dynamic.ConvertibleArgBuilder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Marshal", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MarshalToRef", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.CurrencyArgBuilder */ 

(function CurrencyArgBuilder$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Dynamic.SimpleArgBuilder"), 
      Name: "System.Dynamic.CurrencyArgBuilder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Type"))
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Marshal", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MarshalToRef", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "UnmarshalFromRef", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.DateTimeArgBuilder */ 

(function DateTimeArgBuilder$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Dynamic.SimpleArgBuilder"), 
      Name: "System.Dynamic.DateTimeArgBuilder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Type"))
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MarshalToRef", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "UnmarshalFromRef", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.DispatchArgBuilder */ 

(function DispatchArgBuilder$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Dynamic.SimpleArgBuilder"), 
      Name: "System.Dynamic.DispatchArgBuilder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Marshal", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MarshalToRef", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "UnmarshalFromRef", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_isWrapper", $.Boolean); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.DispCallable */ 

(function DispCallable$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Object"), 
      Name: "System.Dynamic.DispCallable", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm07.TypeRef("System.Dynamic.IDispatchComObject"), $.String, 
          $.Int32
        ])
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object])
    );

    $.ExternalMethod({Static:false, Public:true }, "get_DispatchComObject", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Dynamic.IDispatchComObject"))
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"))
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_DispatchObject", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Dynamic.IDispatch"))
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_DispId", 
      JSIL.MethodSignature.Return($.Int32)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"))
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "get_MemberName", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32)
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "GetMetaObject", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_dispatch", $asm07.TypeRef("System.Dynamic.IDispatchComObject")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_memberName", $.String); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_dispId", $.Int32); 
    $.Property({Static:false, Public:true }, "DispatchComObject", $asm07.TypeRef("System.Dynamic.IDispatchComObject"));

    $.Property({Static:false, Public:true }, "DispatchObject", $asm07.TypeRef("System.Dynamic.IDispatch"));

    $.Property({Static:false, Public:true }, "MemberName", $.String);

    $.Property({Static:false, Public:true }, "DispId", $.Int32);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Dynamic.IDynamicMetaObjectProvider")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Dynamic.DispCallableMetaObject */ 

(function DispCallableMetaObject$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Dynamic.DynamicMetaObject"), 
      Name: "System.Dynamic.DispCallableMetaObject", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Linq.Expressions.Expression"), $asm07.TypeRef("System.Dynamic.DispCallable")])
    );

    $.ExternalMethod({Static:false, Public:false}, "BindComInvoke", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [
          $asm07.TypeRef("System.Dynamic.ComMethodDesc"), $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")]), 
          $asm06.TypeRef("System.Dynamic.CallInfo"), $jsilcore.TypeRef("System.Array", [$.Boolean])
        ])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BindGetIndex", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm06.TypeRef("System.Dynamic.GetIndexBinder"), $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "BindGetOrInvoke", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")]), $asm06.TypeRef("System.Dynamic.CallInfo")])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BindInvoke", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm06.TypeRef("System.Dynamic.InvokeBinder"), $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BindSetIndex", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [
          $asm06.TypeRef("System.Dynamic.SetIndexBinder"), $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")]), 
          $asm06.TypeRef("System.Dynamic.DynamicMetaObject")
        ])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "DispCallableRestrictions", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Dynamic.BindingRestrictions"))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:false, ReadOnly:true }, "_callable", $asm07.TypeRef("System.Dynamic.DispCallable")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.ErrorArgBuilder */ 

(function ErrorArgBuilder$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Dynamic.SimpleArgBuilder"), 
      Name: "System.Dynamic.ErrorArgBuilder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Type"))
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Marshal", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "UnmarshalFromRef", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Dynamic.ExcepInfo */ 

(function ExcepInfo$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.ValueType"), 
      Name: "System.Dynamic.ExcepInfo", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "ConvertAndFreeBstr", 
      new JSIL.MethodSignature($.String, [$jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.IntPtr")])])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "Dummy", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:false, Public:false}, "GetException", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Exception"))
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Usage", "CA2201:DoNotRaiseReservedExceptionTypes"]; })
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.Field({Static:false, Public:false}, "wCode", $.Int16); 
    $.Field({Static:false, Public:false}, "wReserved", $.Int16); 
    $.Field({Static:false, Public:false}, "bstrSource", $asm0B.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "bstrDescription", $asm0B.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "bstrHelpFile", $asm0B.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "dwHelpContext", $.Int32); 
    $.Field({Static:false, Public:false}, "pvReserved", $asm0B.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "pfnDeferredFillIn", $asm0B.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "scode", $.Int32); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Dynamic.Helpers */ 

(function Helpers$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Dynamic.Helpers", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "Convert", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression"), $asm0B.TypeRef("System.Type")])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.IDispatchComObject */ 

(function IDispatchComObject$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Dynamic.ComObject"), 
      Name: "System.Dynamic.IDispatchComObject", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm07.TypeRef("System.Dynamic.IDispatch"))
    );

    $.ExternalMethod({Static:false, Public:false}, "EnsureScanDefinedEvents", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm0B.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "EnsureScanDefinedMethods", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm0B.TypeRef("System.Security.SecuritySafeCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_ComTypeDesc", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Dynamic.ComTypeDesc"))
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_DispatchObject", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Dynamic.IDispatch"))
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"))
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:false}, "GetCoClassTypeInfo", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.ITypeInfo"), [$.Object, $asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.ITypeInfo")])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetFuncDescForDescIndex", 
      new JSIL.MethodSignature(null, [
          $asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.ITypeInfo"), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.FUNCDESC")]), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.IntPtr")])
        ])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Usage", "CA2201:DoNotRaiseReservedExceptionTypes"]; })
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:true , Public:false}, "GetIDsOfNames", 
      new JSIL.MethodSignature($.Int32, [
          $asm07.TypeRef("System.Dynamic.IDispatch"), $.String, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetMemberNames", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Collections.Generic.IList`1", [$.String]), [$.Boolean])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetMembers", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]), [$asm0B.TypeRef("System.Collections.Generic.IEnumerable`1", [$.String])])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1031:DoNotCatchGeneralExceptionTypes"]; });

    $.ExternalMethod({Static:true , Public:false}, "Invoke", 
      new JSIL.MethodSignature($.Int32, [
          $asm07.TypeRef("System.Dynamic.IDispatch"), $.Int32, 
          $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "ScanSourceInterface", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Runtime.InteropServices.ComTypes.ITypeInfo"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm07.TypeRef("System.Dynamic.ComEventDesc")])])])
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "SlowTryGetGetItem", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Dynamic.ComMethodDesc")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "SlowTryGetSetItem", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Dynamic.ComMethodDesc")])])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    )
      .Overrides($asm06.TypeRef("System.Dynamic.IDynamicMetaObjectProvider"), "GetMetaObject");

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetGetItem", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Dynamic.ComMethodDesc")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetMemberEvent", 
      new JSIL.MethodSignature($.Boolean, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Dynamic.ComEventDesc")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetMemberMethod", 
      new JSIL.MethodSignature($.Boolean, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Dynamic.ComMethodDesc")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetMemberMethodExplicit", 
      new JSIL.MethodSignature($.Boolean, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Dynamic.ComMethodDesc")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetPropertySetter", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Dynamic.ComMethodDesc")]), 
          $asm0B.TypeRef("System.Type"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetPropertySetterExplicit", 
      new JSIL.MethodSignature($.Boolean, [
          $.String, $jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Dynamic.ComMethodDesc")]), 
          $asm0B.TypeRef("System.Type"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryGetSetItem", 
      new JSIL.MethodSignature($.Boolean, [$jsilcore.TypeRef("JSIL.Reference", [$asm07.TypeRef("System.Dynamic.ComMethodDesc")])])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_dispatchObject", $asm07.TypeRef("System.Dynamic.IDispatch")); 
    $.Field({Static:false, Public:false}, "_comTypeDesc", $asm07.TypeRef("System.Dynamic.ComTypeDesc")); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "_CacheComTypeDesc", $asm0B.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Guid"), $asm07.TypeRef("System.Dynamic.ComTypeDesc")])); 
    $.Field({Static:false, Public:false}, "_useTypeDescCache", $.Boolean); 
    $.Property({Static:false, Public:true }, "ComTypeDesc", $asm07.TypeRef("System.Dynamic.ComTypeDesc"));

    $.Property({Static:false, Public:true }, "DispatchObject", $asm07.TypeRef("System.Dynamic.IDispatch"));

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Dynamic.IDispatchMetaObject */ 

(function IDispatchMetaObject$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Dynamic.ComFallbackMetaObject"), 
      Name: "System.Dynamic.IDispatchMetaObject", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Linq.Expressions.Expression"), $asm07.TypeRef("System.Dynamic.IDispatchComObject")])
    );

    $.ExternalMethod({Static:false, Public:false}, "BindComInvoke", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [
          $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")]), $asm07.TypeRef("System.Dynamic.ComMethodDesc"), 
          $asm06.TypeRef("System.Dynamic.CallInfo"), $jsilcore.TypeRef("System.Array", [$.Boolean])
        ])
    );

    $.ExternalMethod({Static:false, Public:false}, "BindEvent", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm07.TypeRef("System.Dynamic.ComEventDesc")])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BindGetIndex", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm06.TypeRef("System.Dynamic.GetIndexBinder"), $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BindGetMember", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm06.TypeRef("System.Dynamic.GetMemberBinder")])
    );

    $.ExternalMethod({Static:false, Public:false}, "BindGetMember", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm07.TypeRef("System.Dynamic.ComMethodDesc"), $.Boolean])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BindInvoke", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm06.TypeRef("System.Dynamic.InvokeBinder"), $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BindInvokeMember", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm06.TypeRef("System.Dynamic.InvokeMemberBinder"), $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")])])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BindSetIndex", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [
          $asm06.TypeRef("System.Dynamic.SetIndexBinder"), $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Dynamic.DynamicMetaObject")]), 
          $asm06.TypeRef("System.Dynamic.DynamicMetaObject")
        ])
    );

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "BindSetMember", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm06.TypeRef("System.Dynamic.SetMemberBinder"), $asm06.TypeRef("System.Dynamic.DynamicMetaObject")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IDispatchRestriction", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.BindingRestrictions"), [$asm06.TypeRef("System.Linq.Expressions.Expression"), $asm07.TypeRef("System.Dynamic.ComTypeDesc")])
    );

    $.ExternalMethod({Static:false, Public:false}, "IDispatchRestriction", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Dynamic.BindingRestrictions"))
    );

    $.ExternalMethod({Static:false, Public:false}, "TryEventHandlerNoop", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm06.TypeRef("System.Dynamic.SetMemberBinder"), $asm06.TypeRef("System.Dynamic.DynamicMetaObject")])
    );

    $.ExternalMethod({Static:false, Public:false}, "TryPropertyPut", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Dynamic.DynamicMetaObject"), [$asm06.TypeRef("System.Dynamic.SetMemberBinder"), $asm06.TypeRef("System.Dynamic.DynamicMetaObject")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "UnwrapSelf", 
      JSIL.MethodSignature.Return($asm07.TypeRef("System.Dynamic.ComUnwrappedMetaObject"))
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_self", $asm07.TypeRef("System.Dynamic.IDispatchComObject")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.NullArgBuilder */ 

(function NullArgBuilder$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Dynamic.ArgBuilder"), 
      Name: "System.Dynamic.NullArgBuilder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Marshal", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.SplatCallSite */ 

(function SplatCallSite$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Object"), 
      Name: "System.Dynamic.SplatCallSite", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.Object)
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "Invoke", 
      new JSIL.MethodSignature($.Object, [$jsilcore.TypeRef("System.Array", [$.Object])])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_callable", $.Object); 
    $.Field({Static:false, Public:false}, "_site", $asm06.TypeRef("System.Runtime.CompilerServices.CallSite`1", [$asm0B.TypeRef("System.Func`4", [
            $asm06.TypeRef("System.Runtime.CompilerServices.CallSite"), $.Object, 
            $jsilcore.TypeRef("System.Array", [$.Object]), $.Object
          ])])); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.StringArgBuilder */ 

(function StringArgBuilder$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Dynamic.SimpleArgBuilder"), 
      Name: "System.Dynamic.StringArgBuilder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Marshal", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MarshalToRef", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "UnmarshalFromRef", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_isWrapper", $.Boolean); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.TypeUtils */ 

(function TypeUtils$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Dynamic.TypeUtils", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "AreAssignable", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Type"), $asm0B.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "AreReferenceAssignable", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Type"), $asm0B.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "FindConversionOperator", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Reflection.MethodInfo"), [
          $jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Reflection.MethodInfo")]), $asm0B.TypeRef("System.Type"), 
          $asm0B.TypeRef("System.Type"), $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetNonNullableType", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Type"), [$asm0B.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetUserDefinedCoercionMethod", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Reflection.MethodInfo"), [
          $asm0B.TypeRef("System.Type"), $asm0B.TypeRef("System.Type"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsIdentityConversion", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Type"), $asm0B.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsImplicitBoxingConversion", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Type"), $asm0B.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsImplicitlyConvertible", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Type"), $asm0B.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsImplicitlyConvertible", 
      new JSIL.MethodSignature($.Boolean, [
          $asm0B.TypeRef("System.Type"), $asm0B.TypeRef("System.Type"), 
          $.Boolean
        ])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsImplicitNumericConversion", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Type"), $asm0B.TypeRef("System.Type")])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity"]; });

    $.ExternalMethod({Static:true , Public:false}, "IsImplicitReferenceConversion", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Type"), $asm0B.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "IsNullableType", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Type")])
    )
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

    $.Constant({Static:true , Public:false}, "PublicStatic", 22); 
    $.Constant({Static:true , Public:false}, "AnyStatic", 56); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.ExtensionAttribute"));

})();

/* class System.Dynamic.UnknownArgBuilder */ 

(function UnknownArgBuilder$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Dynamic.SimpleArgBuilder"), 
      Name: "System.Dynamic.UnknownArgBuilder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Marshal", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MarshalToRef", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "UnmarshalFromRef", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_isWrapper", $.Boolean); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.VarEnumSelector */ 

(function VarEnumSelector$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Object"), 
      Name: "System.Dynamic.VarEnumSelector", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Type")]))
    );

    $.ExternalMethod({Static:true , Public:false}, "CheckForAmbiguousMatch", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Type"), $asm0B.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Runtime.InteropServices.VarEnum")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateComPrimitiveTypeFamilies", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Runtime.InteropServices.VarEnum")])]))
    );

    $.ExternalMethod({Static:true , Public:false}, "CreateComToManagedPrimitiveTypes", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Runtime.InteropServices.VarEnum"), $asm0B.TypeRef("System.Type")]))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_VariantBuilders", 
      JSIL.MethodSignature.Return($jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Dynamic.VariantBuilder")]))
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:true , Public:false}, "GetByValArgBuilder", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Dynamic.ArgBuilder"), [$asm0B.TypeRef("System.Type"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Runtime.InteropServices.VarEnum")])])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetComType", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Runtime.InteropServices.VarEnum"), [$jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Type")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetConversionsToComPrimitiveTypeFamilies", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Runtime.InteropServices.VarEnum")]), [$asm0B.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetManagedMarshalType", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Type"), [$asm0B.TypeRef("System.Runtime.InteropServices.VarEnum")])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetSimpleArgBuilder", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Dynamic.SimpleArgBuilder"), [$asm0B.TypeRef("System.Type"), $asm0B.TypeRef("System.Runtime.InteropServices.VarEnum")])
    );

    $.ExternalMethod({Static:false, Public:false}, "GetVariantBuilder", 
      new JSIL.MethodSignature($asm07.TypeRef("System.Dynamic.VariantBuilder"), [$asm0B.TypeRef("System.Type")])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryGetPrimitiveComType", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Type"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Runtime.InteropServices.VarEnum")])])
    );

    $.ExternalMethod({Static:true , Public:false}, "TryGetPrimitiveComTypeViaConversion", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Type"), $jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Runtime.InteropServices.VarEnum")])])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_variantBuilders", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Dynamic.VariantBuilder")])); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "_ComToManagedPrimitiveTypes", $asm0B.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.Runtime.InteropServices.VarEnum"), $asm0B.TypeRef("System.Type")])); 
    $.Field({Static:true , Public:false, ReadOnly:true }, "_ComPrimitiveTypeFamilies", $asm0B.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Collections.Generic.IList`1", [$asm0B.TypeRef("System.Runtime.InteropServices.VarEnum")])])); 
    $.Constant({Static:true , Public:false}, "VT_DEFAULT", 36); 
    $.Property({Static:false, Public:false}, "VariantBuilders", $jsilcore.TypeRef("System.Array", [$asm07.TypeRef("System.Dynamic.VariantBuilder")]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Dynamic.Variant */ 

(function Variant$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.ValueType"), 
      Name: "System.Dynamic.Variant", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, "Clear", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_AsBool", 
      JSIL.MethodSignature.Return($.Boolean)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_AsBstr", 
      JSIL.MethodSignature.Return($.String)
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_AsCy", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Decimal"))
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_AsDate", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.DateTime"))
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_AsDecimal", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Decimal"))
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_AsDispatch", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_AsError", 
      JSIL.MethodSignature.Return($.Int32)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_AsI1", 
      JSIL.MethodSignature.Return($.SByte)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_AsI2", 
      JSIL.MethodSignature.Return($.Int16)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_AsI4", 
      JSIL.MethodSignature.Return($.Int32)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_AsI8", 
      JSIL.MethodSignature.Return($.Int64)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_AsInt", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.IntPtr"))
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_AsR4", 
      JSIL.MethodSignature.Return($.Single)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_AsR8", 
      JSIL.MethodSignature.Return($.Double)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_AsUi1", 
      JSIL.MethodSignature.Return($.Byte)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_AsUi2", 
      JSIL.MethodSignature.Return($.UInt16)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_AsUi4", 
      JSIL.MethodSignature.Return($.UInt32)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_AsUi8", 
      JSIL.MethodSignature.Return($.UInt64)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_AsUint", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.UIntPtr"))
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_AsUnknown", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "get_AsVariant", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "get_IsEmpty", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.ExternalMethod({Static:false, Public:true }, "get_VariantType", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Runtime.InteropServices.VarEnum"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetAccessor", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Reflection.PropertyInfo"), [$asm0B.TypeRef("System.Runtime.InteropServices.VarEnum")])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity"]; });

    $.ExternalMethod({Static:true , Public:false}, "GetByrefSetter", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Reflection.MethodInfo"), [$asm0B.TypeRef("System.Runtime.InteropServices.VarEnum")])
    )
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity"]; });

    $.ExternalMethod({Static:true , Public:false}, "IsPrimitiveType", 
      new JSIL.MethodSignature($.Boolean, [$asm0B.TypeRef("System.Runtime.InteropServices.VarEnum")])
    );

    $.ExternalMethod({Static:false, Public:true }, "set_AsBool", 
      JSIL.MethodSignature.Action($.Boolean)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_AsBstr", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_AsCy", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Decimal"))
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_AsDate", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.DateTime"))
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_AsDecimal", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Decimal"))
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_AsDispatch", 
      JSIL.MethodSignature.Action($.Object)
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_AsError", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_AsI1", 
      JSIL.MethodSignature.Action($.SByte)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_AsI2", 
      JSIL.MethodSignature.Action($.Int16)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_AsI4", 
      JSIL.MethodSignature.Action($.Int32)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_AsI8", 
      JSIL.MethodSignature.Action($.Int64)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_AsInt", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.IntPtr"))
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_AsR4", 
      JSIL.MethodSignature.Action($.Single)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_AsR8", 
      JSIL.MethodSignature.Action($.Double)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_AsUi1", 
      JSIL.MethodSignature.Action($.Byte)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_AsUi2", 
      JSIL.MethodSignature.Action($.UInt16)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_AsUi4", 
      JSIL.MethodSignature.Action($.UInt32)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_AsUi8", 
      JSIL.MethodSignature.Action($.UInt64)
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_AsUint", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.UIntPtr"))
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_AsUnknown", 
      JSIL.MethodSignature.Action($.Object)
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_AsVariant", 
      JSIL.MethodSignature.Action($.Object)
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "set_VariantType", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Runtime.InteropServices.VarEnum"))
    );

    $.ExternalMethod({Static:false, Public:true }, "SetAsByrefBool", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Int16]))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAsByrefBstr", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.IntPtr")]))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAsByrefCy", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Int64]))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAsByrefDate", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Double]))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAsByrefDecimal", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.Decimal")]))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAsByrefDispatch", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.IntPtr")]))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAsByrefError", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Int32]))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAsByrefI1", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.SByte]))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAsByrefI2", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Int16]))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAsByrefI4", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Int32]))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAsByrefI8", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Int64]))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAsByrefInt", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.IntPtr")]))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAsByrefR4", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Single]))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAsByrefR8", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Double]))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAsByrefUi1", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Byte]))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAsByrefUi2", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.UInt16]))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAsByrefUi4", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.UInt32]))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAsByrefUi8", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.UInt64]))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAsByrefUint", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.UIntPtr")]))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAsByrefUnknown", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$asm0B.TypeRef("System.IntPtr")]))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAsByrefVariant", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Type]))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAsByrefVariantIndirect", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("JSIL.Reference", [$.Type]))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAsIConvertible", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.IConvertible"))
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true }, "SetAsNull", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"))
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true }, "ToObject", 
      JSIL.MethodSignature.Return($.Object)
    )
      .Attribute($asm0B.TypeRef("System.Security.SecurityCriticalAttribute"))
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Maintainability", "CA1502:AvoidExcessiveComplexity"]; })
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "_typeUnion", $asm07.TypeRef("System.Dynamic.Variant+TypeUnion")); 
    $.Field({Static:false, Public:false}, "_decimal", $asm0B.TypeRef("System.Decimal")); 
    $.Property({Static:false, Public:true }, "VariantType", $asm0B.TypeRef("System.Runtime.InteropServices.VarEnum"));

    $.Property({Static:false, Public:false}, "IsEmpty", $.Boolean);

    $.Property({Static:false, Public:true }, "AsI1", $.SByte);

    $.Property({Static:false, Public:true }, "AsI2", $.Int16);

    $.Property({Static:false, Public:true }, "AsI4", $.Int32);

    $.Property({Static:false, Public:true }, "AsI8", $.Int64);

    $.Property({Static:false, Public:true }, "AsUi1", $.Byte);

    $.Property({Static:false, Public:true }, "AsUi2", $.UInt16);

    $.Property({Static:false, Public:true }, "AsUi4", $.UInt32);

    $.Property({Static:false, Public:true }, "AsUi8", $.UInt64);

    $.Property({Static:false, Public:true }, "AsInt", $asm0B.TypeRef("System.IntPtr"));

    $.Property({Static:false, Public:true }, "AsUint", $asm0B.TypeRef("System.UIntPtr"));

    $.Property({Static:false, Public:true }, "AsBool", $.Boolean);

    $.Property({Static:false, Public:true }, "AsError", $.Int32);

    $.Property({Static:false, Public:true }, "AsR4", $.Single);

    $.Property({Static:false, Public:true }, "AsR8", $.Double);

    $.Property({Static:false, Public:true }, "AsDecimal", $asm0B.TypeRef("System.Decimal"));

    $.Property({Static:false, Public:true }, "AsCy", $asm0B.TypeRef("System.Decimal"));

    $.Property({Static:false, Public:true }, "AsDate", $asm0B.TypeRef("System.DateTime"));

    $.Property({Static:false, Public:true }, "AsBstr", $.String);

    $.Property({Static:false, Public:true }, "AsUnknown", $.Object);

    $.Property({Static:false, Public:true }, "AsDispatch", $.Object);

    $.Property({Static:false, Public:true }, "AsVariant", $.Object);

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* struct System.Dynamic.Variant+TypeUnion */ 

(function TypeUnion$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.ValueType"), 
      Name: "System.Dynamic.Variant+TypeUnion", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:false}, "_vt", $.UInt16); 
    $.Field({Static:false, Public:false}, "_wReserved1", $.UInt16); 
    $.Field({Static:false, Public:false}, "_wReserved2", $.UInt16); 
    $.Field({Static:false, Public:false}, "_wReserved3", $.UInt16); 
    $.Field({Static:false, Public:false}, "_unionTypes", $asm07.TypeRef("System.Dynamic.Variant+UnionTypes")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Dynamic.Variant+Record */ 

(function Record$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.ValueType"), 
      Name: "System.Dynamic.Variant+Record", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:false}, "_record", $asm0B.TypeRef("System.IntPtr")); 
    $.Field({Static:false, Public:false}, "_recordInfo", $asm0B.TypeRef("System.IntPtr")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Dynamic.Variant+UnionTypes */ 

(function UnionTypes$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.ValueType"), 
      Name: "System.Dynamic.Variant+UnionTypes", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:false}, "_i1", $.SByte); 
    $.Field({Static:false, Public:false}, "_i2", $.Int16); 
    $.Field({Static:false, Public:false}, "_i4", $.Int32); 
    $.Field({Static:false, Public:false}, "_i8", $.Int64); 
    $.Field({Static:false, Public:false}, "_ui1", $.Byte); 
    $.Field({Static:false, Public:false}, "_ui2", $.UInt16); 
    $.Field({Static:false, Public:false}, "_ui4", $.UInt32); 
    $.Field({Static:false, Public:false}, "_ui8", $.UInt64); 
    $.Field({Static:false, Public:false}, "_int", $asm0B.TypeRef("System.IntPtr"))
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Reliability", "CA2006:UseSafeHandleToEncapsulateNativeResources"]; }); 
    $.Field({Static:false, Public:false}, "_uint", $asm0B.TypeRef("System.UIntPtr")); 
    $.Field({Static:false, Public:false}, "_bool", $.Int16); 
    $.Field({Static:false, Public:false}, "_error", $.Int32); 
    $.Field({Static:false, Public:false}, "_r4", $.Single); 
    $.Field({Static:false, Public:false}, "_r8", $.Double); 
    $.Field({Static:false, Public:false}, "_cy", $.Int64); 
    $.Field({Static:false, Public:false}, "_date", $.Double); 
    $.Field({Static:false, Public:false}, "_bstr", $asm0B.TypeRef("System.IntPtr"))
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Reliability", "CA2006:UseSafeHandleToEncapsulateNativeResources"]; })
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields"]; }); 
    $.Field({Static:false, Public:false}, "_unknown", $asm0B.TypeRef("System.IntPtr"))
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Reliability", "CA2006:UseSafeHandleToEncapsulateNativeResources"]; }); 
    $.Field({Static:false, Public:false}, "_dispatch", $asm0B.TypeRef("System.IntPtr"))
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Reliability", "CA2006:UseSafeHandleToEncapsulateNativeResources"]; }); 
    $.Field({Static:false, Public:false}, "_byref", $asm0B.TypeRef("System.IntPtr"))
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields"]; }); 
    $.Field({Static:false, Public:false}, "_record", $asm07.TypeRef("System.Dynamic.Variant+Record"))
      .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields"]; }); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0B.TypeRef("System.Diagnostics.CodeAnalysis.SuppressMessageAttribute"), function () { return ["Microsoft.Design", "CA1049:TypesThatOwnNativeResourcesShouldBeDisposable"]; });

})();

/* class System.Dynamic.VariantArgBuilder */ 

(function VariantArgBuilder$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm07.TypeRef("System.Dynamic.SimpleArgBuilder"), 
      Name: "System.Dynamic.VariantArgBuilder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Type"))
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "Marshal", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "MarshalToRef", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "UnmarshalFromRef", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.Field({Static:false, Public:false, ReadOnly:true }, "_isWrapper", $.Boolean); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Dynamic.VariantArray1 */ 

(function VariantArray1$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.ValueType"), 
      Name: "System.Dynamic.VariantArray1", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "Element0", $asm07.TypeRef("System.Dynamic.Variant"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute")); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* struct System.Dynamic.VariantArray2 */ 

(function VariantArray2$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.ValueType"), 
      Name: "System.Dynamic.VariantArray2", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "Element0", $asm07.TypeRef("System.Dynamic.Variant"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute")); 
    $.Field({Static:false, Public:true }, "Element1", $asm07.TypeRef("System.Dynamic.Variant"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute")); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* struct System.Dynamic.VariantArray4 */ 

(function VariantArray4$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.ValueType"), 
      Name: "System.Dynamic.VariantArray4", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "Element0", $asm07.TypeRef("System.Dynamic.Variant"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute")); 
    $.Field({Static:false, Public:true }, "Element1", $asm07.TypeRef("System.Dynamic.Variant"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute")); 
    $.Field({Static:false, Public:true }, "Element2", $asm07.TypeRef("System.Dynamic.Variant"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute")); 
    $.Field({Static:false, Public:true }, "Element3", $asm07.TypeRef("System.Dynamic.Variant"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute")); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* struct System.Dynamic.VariantArray8 */ 

(function VariantArray8$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.ValueType"), 
      Name: "System.Dynamic.VariantArray8", 
      IsPublic: false, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Field({Static:false, Public:true }, "Element0", $asm07.TypeRef("System.Dynamic.Variant"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute")); 
    $.Field({Static:false, Public:true }, "Element1", $asm07.TypeRef("System.Dynamic.Variant"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute")); 
    $.Field({Static:false, Public:true }, "Element2", $asm07.TypeRef("System.Dynamic.Variant"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute")); 
    $.Field({Static:false, Public:true }, "Element3", $asm07.TypeRef("System.Dynamic.Variant"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute")); 
    $.Field({Static:false, Public:true }, "Element4", $asm07.TypeRef("System.Dynamic.Variant"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute")); 
    $.Field({Static:false, Public:true }, "Element5", $asm07.TypeRef("System.Dynamic.Variant"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute")); 
    $.Field({Static:false, Public:true }, "Element6", $asm07.TypeRef("System.Dynamic.Variant"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute")); 
    $.Field({Static:false, Public:true }, "Element7", $asm07.TypeRef("System.Dynamic.Variant"))
      .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute")); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm07.TypeRef("__DynamicallyInvokableAttribute"));

})();

/* class System.Dynamic.VariantArray */ 

(function VariantArray$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Dynamic.VariantArray", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "CreateCustomType", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Type"), [$.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetStructField", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.MemberExpression"), [$asm06.TypeRef("System.Linq.Expressions.ParameterExpression"), $.Int32])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetStructType", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Type"), [$.Int32])
    );

    $.Field({Static:true , Public:false, ReadOnly:true }, "_generatedTypes", $asm0B.TypeRef("System.Collections.Generic.List`1", [$asm0B.TypeRef("System.Type")])); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.VariantBuilder */ 

(function VariantBuilder$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Linq.Expressions.ParameterExpression)) ();
  };

  function VariantBuilder_get_TempVariable () {
    return this.VariantBuilder$TempVariable$value;
  };

  function VariantBuilder_set_TempVariable (value) {
    this.VariantBuilder$TempVariable$value = value;
  };

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Object"), 
      Name: "System.Dynamic.VariantBuilder", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm0B.TypeRef("System.Runtime.InteropServices.VarEnum"), $asm07.TypeRef("System.Dynamic.ArgBuilder")])
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "Clear", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Linq.Expressions.Expression"))
    );

    $.ExternalMethod({Static:false, Public:false}, "get_IsByRef", 
      JSIL.MethodSignature.Return($.Boolean)
    );

    $.Method({Static:false, Public:false}, "get_TempVariable", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Linq.Expressions.ParameterExpression")), 
      VariantBuilder_get_TempVariable
    )
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"))
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false}, "InitializeArgumentVariant", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.MemberExpression"), $asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.ExternalMethod({Static:true , Public:false}, "Release", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.Method({Static:false, Public:false}, "set_TempVariable", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Linq.Expressions.ParameterExpression")), 
      VariantBuilder_set_TempVariable
    )
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.ExternalMethod({Static:false, Public:false}, "UpdateFromReturn", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Linq.Expressions.Expression"), [$asm06.TypeRef("System.Linq.Expressions.Expression")])
    );

    $.Field({Static:false, Public:false}, "_variant", $asm06.TypeRef("System.Linq.Expressions.MemberExpression")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_argBuilder", $asm07.TypeRef("System.Dynamic.ArgBuilder")); 
    $.Field({Static:false, Public:false, ReadOnly:true }, "_targetComType", $asm0B.TypeRef("System.Runtime.InteropServices.VarEnum")); 
    $.Field({Static:false, Public:false}, "VariantBuilder$TempVariable$value", $asm06.TypeRef("System.Linq.Expressions.ParameterExpression"))
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:false}, "TempVariable", $asm06.TypeRef("System.Linq.Expressions.ParameterExpression"));

    $.Property({Static:false, Public:false}, "IsByRef", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.Strings */ 

(function Strings$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Dynamic.Strings", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "AmbiguousConversion", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "CouldNotGetDispId", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DispBadParamCount", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DispMemberNotFound", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DispNoNamedArgs", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DispOverflow", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DispParamNotOptional", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DispTypeMismatch", 
      new JSIL.MethodSignature($.String, [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotCall", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_CannotRetrieveTypeInformation", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_COMObjectDoesNotSupportEvents", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_COMObjectDoesNotSupportSourceInterface", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_ComObjectExpected", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_InvalidArgumentValue", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_MethodShouldNotBeCalled", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_SetComObjectDataFailed", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_UnsupportedEnumType", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "get_UnsupportedHandlerType", 
      JSIL.MethodSignature.Return($.String)
    );

    $.ExternalMethod({Static:true , Public:false}, "GetIDsOfNamesInvalid", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "UnexpectedVarEnum", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "VariantGetAccessorNYI", 
      new JSIL.MethodSignature($.String, [$.Object])
    );

    $.Property({Static:true , Public:false}, "InvalidArgumentValue", $.String);

    $.Property({Static:true , Public:false}, "ComObjectExpected", $.String);

    $.Property({Static:true , Public:false}, "CannotCall", $.String);

    $.Property({Static:true , Public:false}, "COMObjectDoesNotSupportEvents", $.String);

    $.Property({Static:true , Public:false}, "COMObjectDoesNotSupportSourceInterface", $.String);

    $.Property({Static:true , Public:false}, "SetComObjectDataFailed", $.String);

    $.Property({Static:true , Public:false}, "MethodShouldNotBeCalled", $.String);

    $.Property({Static:true , Public:false}, "CannotRetrieveTypeInformation", $.String);

    $.Property({Static:true , Public:false}, "UnsupportedEnumType", $.String);

    $.Property({Static:true , Public:false}, "UnsupportedHandlerType", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.Error */ 

(function Error$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("System.Dynamic.Error", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:true , Public:false}, "AmbiguousConversion", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Exception"), [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "ArgumentNull", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Exception"), [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "ArgumentOutOfRange", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Exception"), [$.String])
    );

    $.ExternalMethod({Static:true , Public:false}, "CannotRetrieveTypeInformation", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:true , Public:false}, "COMObjectDoesNotSupportEvents", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:true , Public:false}, "COMObjectDoesNotSupportSourceInterface", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:true , Public:false}, "CouldNotGetDispId", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Exception"), [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DispBadParamCount", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Exception"), [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DispMemberNotFound", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Exception"), [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DispNoNamedArgs", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Exception"), [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DispOverflow", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Exception"), [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DispParamNotOptional", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Exception"), [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "DispTypeMismatch", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Exception"), [$.Object, $.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "GetIDsOfNamesInvalid", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Exception"), [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "MethodShouldNotBeCalled", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:true , Public:false}, "NotImplemented", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:true , Public:false}, "NotSupported", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:true , Public:false}, "SetComObjectDataFailed", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:true , Public:false}, "UnexpectedVarEnum", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Exception"), [$.Object])
    );

    $.ExternalMethod({Static:true , Public:false}, "UnsupportedEnumType", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:true , Public:false}, "UnsupportedHandlerType", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Exception"))
    );

    $.ExternalMethod({Static:true , Public:false}, "VariantGetAccessorNYI", 
      new JSIL.MethodSignature($asm0B.TypeRef("System.Exception"), [$.Object])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class FXAssembly */ 

(function FXAssembly$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("FXAssembly", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Constant({Static:true , Public:false}, "Version", "4.0.0.0"); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class ThisAssembly */ 

(function ThisAssembly$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("ThisAssembly", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Constant({Static:true , Public:false}, "Title", "System.Dynamic.dll"); 
    $.Constant({Static:true , Public:false}, "Description", "System.Dynamic.dll"); 
    $.Constant({Static:true , Public:false}, "DefaultAlias", "System.Dynamic.dll"); 
    $.Constant({Static:true , Public:false}, "Copyright", "\xa9 Microsoft Corporation.  All rights reserved."); 
    $.Constant({Static:true , Public:false}, "Version", "4.0.0.0"); 
    $.Constant({Static:true , Public:false}, "InformationalVersion", "4.0.30319.33440"); 
    $.Constant({Static:true , Public:false}, "DailyBuildNumberStr", "30319"); 
    $.Constant({Static:true , Public:false}, "BuildRevisionStr", "33440"); 
    $.Constant({Static:true , Public:false}, "DailyBuildNumber", 30319); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class AssemblyRef */ 

(function AssemblyRef$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("AssemblyRef", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Constant({Static:true , Public:false}, "EcmaPublicKey", "b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "EcmaPublicKeyToken", "b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "EcmaPublicKeyFull", "00000000000000000400000000000000"); 
    $.Constant({Static:true , Public:false}, "SilverlightPublicKey", "31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "SilverlightPublicKeyToken", "31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "SilverlightPublicKeyFull", "0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9"); 
    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKey", "7cec85d7bea7798e"); 
    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKeyToken", "7cec85d7bea7798e"); 
    $.Constant({Static:true , Public:false}, "SilverlightPlatformPublicKeyFull", "00240000048000009400000006020000002400005253413100040000010001008D56C76F9E8649383049F383C44BE0EC204181822A6C31CF5EB7EF486944D032188EA1D3920763712CCB12D75FB77E9811149E6148E5D32FBAAB37611C1878DDC19E20EF135D0CB2CFF2BFEC3D115810C3D9069638FE4BE215DBF795861920E5AB6F7DB2E2CEEF136AC23D5DD2BF031700AEC232F6C6B1C785B4305C123B37AB"); 
    $.Constant({Static:true , Public:false}, "PlatformPublicKey", "b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "PlatformPublicKeyToken", "b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "PlatformPublicKeyFull", "00000000000000000400000000000000"); 
    $.Constant({Static:true , Public:false}, "Mscorlib", "mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "SystemData", "System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "SystemDataOracleClient", "System.Data.OracleClient, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "System", "System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "SystemCore", "System.Core, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "SystemNumerics", "System.Numerics, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "SystemRuntimeRemoting", "System.Runtime.Remoting, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "SystemThreadingTasksDataflow", "System.Threading.Tasks.Dataflow, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "SystemWindowsForms", "System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "SystemXml", "System.Xml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "MicrosoftPublicKey", "b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "MicrosoftPublicKeyToken", "b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "MicrosoftPublicKeyFull", "002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293"); 
    $.Constant({Static:true , Public:false}, "SharedLibPublicKey", "31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "SharedLibPublicKeyToken", "31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "SharedLibPublicKeyFull", "0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9"); 
    $.Constant({Static:true , Public:false}, "SystemComponentModelDataAnnotations", "System.ComponentModel.DataAnnotations, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "SystemConfiguration", "System.Configuration, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemConfigurationInstall", "System.Configuration.Install, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemDeployment", "System.Deployment, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemDesign", "System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemDirectoryServices", "System.DirectoryServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemDrawingDesign", "System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemDrawing", "System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemEnterpriseServices", "System.EnterpriseServices, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemManagement", "System.Management, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemMessaging", "System.Messaging, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemNetHttp", "System.Net.Http, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemNetHttpWebRequest", "System.Net.Http.WebRequest, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemRuntimeSerializationFormattersSoap", "System.Runtime.Serialization.Formatters.Soap, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemRuntimeWindowsRuntime", "System.Runtime.WindowsRuntime, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "SystemRuntimeWindowsRuntimeUIXaml", "System.Runtime.WindowsRuntimeUIXaml, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "SystemSecurity", "System.Security, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemServiceModelWeb", "System.ServiceModel.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "SystemServiceProcess", "System.ServiceProcess, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemWeb", "System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemWebAbstractions", "System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "SystemWebDynamicData", "System.Web.DynamicData, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "SystemWebDynamicDataDesign", "System.Web.DynamicData.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "SystemWebEntityDesign", "System.Web.Entity.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"); 
    $.Constant({Static:true , Public:false}, "SystemWebExtensions", "System.Web.Extensions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "SystemWebExtensionsDesign", "System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "SystemWebMobile", "System.Web.Mobile, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemWebRegularExpressions", "System.Web.RegularExpressions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "SystemWebRouting", "System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "SystemWebServices", "System.Web.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "WindowsBase", "WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"); 
    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudio", "Microsoft.VisualStudio, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudioWindowsForms", "Microsoft.VisualStudio.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "VJSharpCodeProvider", "VJSharpCodeProvider, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "ASPBrowserCapsPublicKey", "b7bd7678b977bd8f"); 
    $.Constant({Static:true , Public:false}, "ASPBrowserCapsFactory", "ASP.BrowserCapsFactory, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b7bd7678b977bd8f"); 
    $.Constant({Static:true , Public:false}, "MicrosoftVSDesigner", "Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "MicrosoftVisualStudioWeb", "Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "MicrosoftWebDesign", "Microsoft.Web.Design.Client, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "MicrosoftVSDesignerMobile", "Microsoft.VSDesigner.Mobile, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    $.Constant({Static:true , Public:false}, "MicrosoftJScript", "Microsoft.JScript, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Dynamic.SRDescriptionAttribute */ 

(function SRDescriptionAttribute$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm04.TypeRef("System.ComponentModel.DescriptionAttribute"), 
      Name: "System.Dynamic.SRDescriptionAttribute", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:true , Virtual:true }, "get_Description", 
      JSIL.MethodSignature.Return($.String)
    );

    $.Field({Static:false, Public:false}, "replaced", $.Boolean); 
    $.Property({Static:false, Public:true , Virtual:true }, "Description", $.String);

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0B.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm0B.System.AttributeTargets.All]; });

})();

/* class System.Dynamic.SRCategoryAttribute */ 

(function SRCategoryAttribute$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm04.TypeRef("System.ComponentModel.CategoryAttribute"), 
      Name: "System.Dynamic.SRCategoryAttribute", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String)
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ExternalMethod({Static:false, Public:false, Virtual:true }, "GetLocalizedString", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0B.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm0B.System.AttributeTargets.All]; });

})();

/* class System.Dynamic.SR */ 

(function SR$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Object"), 
      Name: "System.Dynamic.SR", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void
    );

    $.ExternalMethod({Static:true , Public:false}, "get_Culture", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Globalization.CultureInfo"))
    );

    $.ExternalMethod({Static:true , Public:true }, "get_Resources", 
      JSIL.MethodSignature.Return($asm0B.TypeRef("System.Resources.ResourceManager"))
    );

    $.ExternalMethod({Static:true , Public:false}, "GetLoader", 
      JSIL.MethodSignature.Return($.Type)
    );

    $.ExternalMethod({Static:true , Public:true }, "GetObject", 
      new JSIL.MethodSignature($.Object, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetString", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("System.Array", [$.Object])])
    )
      .Parameter(1, "args", function (_) {
          _.Attribute($asm0B.TypeRef("System.ParamArrayAttribute"))
        });

    $.ExternalMethod({Static:true , Public:true }, "GetString", 
      new JSIL.MethodSignature($.String, [$.String])
    );

    $.ExternalMethod({Static:true , Public:true }, "GetString", 
      new JSIL.MethodSignature($.String, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.Boolean])])
    );

    $.Constant({Static:true , Public:false}, "InvalidArgumentValue", "InvalidArgumentValue"); 
    $.Constant({Static:true , Public:false}, "ComObjectExpected", "ComObjectExpected"); 
    $.Constant({Static:true , Public:false}, "CannotCall", "CannotCall"); 
    $.Constant({Static:true , Public:false}, "COMObjectDoesNotSupportEvents", "COMObjectDoesNotSupportEvents"); 
    $.Constant({Static:true , Public:false}, "COMObjectDoesNotSupportSourceInterface", "COMObjectDoesNotSupportSourceInterface"); 
    $.Constant({Static:true , Public:false}, "SetComObjectDataFailed", "SetComObjectDataFailed"); 
    $.Constant({Static:true , Public:false}, "MethodShouldNotBeCalled", "MethodShouldNotBeCalled"); 
    $.Constant({Static:true , Public:false}, "UnexpectedVarEnum", "UnexpectedVarEnum"); 
    $.Constant({Static:true , Public:false}, "DispBadParamCount", "DispBadParamCount"); 
    $.Constant({Static:true , Public:false}, "DispMemberNotFound", "DispMemberNotFound"); 
    $.Constant({Static:true , Public:false}, "DispNoNamedArgs", "DispNoNamedArgs"); 
    $.Constant({Static:true , Public:false}, "DispOverflow", "DispOverflow"); 
    $.Constant({Static:true , Public:false}, "DispTypeMismatch", "DispTypeMismatch"); 
    $.Constant({Static:true , Public:false}, "DispParamNotOptional", "DispParamNotOptional"); 
    $.Constant({Static:true , Public:false}, "CannotRetrieveTypeInformation", "CannotRetrieveTypeInformation"); 
    $.Constant({Static:true , Public:false}, "GetIDsOfNamesInvalid", "GetIDsOfNamesInvalid"); 
    $.Constant({Static:true , Public:false}, "UnsupportedEnumType", "UnsupportedEnumType"); 
    $.Constant({Static:true , Public:false}, "UnsupportedHandlerType", "UnsupportedHandlerType"); 
    $.Constant({Static:true , Public:false}, "CouldNotGetDispId", "CouldNotGetDispId"); 
    $.Constant({Static:true , Public:false}, "AmbiguousConversion", "AmbiguousConversion"); 
    $.Constant({Static:true , Public:false}, "VariantGetAccessorNYI", "VariantGetAccessorNYI"); 
    $.Field({Static:true , Public:false}, "loader", $.Type); 
    $.Field({Static:false, Public:false}, "resources", $asm0B.TypeRef("System.Resources.ResourceManager")); 
    $.Property({Static:true , Public:false}, "Culture", $asm0B.TypeRef("System.Globalization.CultureInfo"));

    $.Property({Static:true , Public:true }, "Resources", $asm0B.TypeRef("System.Resources.ResourceManager"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class __DynamicallyInvokableAttribute */ 

(function __DynamicallyInvokableAttribute$Members () {
  var $, $thisType;
  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Attribute"), 
      Name: "__DynamicallyInvokableAttribute", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalMethod({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void
    )
      .Attribute($asm0B.TypeRef("System.Runtime.TargetedPatchingOptOutAttribute"), function () { return ["Performance critical to inline this type of method across NGen image boundaries"]; });

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0B.TypeRef("System.AttributeUsageAttribute"), function () { return [$asm0B.System.AttributeTargets.All]; });

})();

