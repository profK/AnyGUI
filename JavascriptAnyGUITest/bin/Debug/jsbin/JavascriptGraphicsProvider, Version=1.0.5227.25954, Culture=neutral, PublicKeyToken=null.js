/* Generated by JSIL v0.7.9 build 22029. See http://jsil.org/ for more information. */ 
var $asm02 = JSIL.DeclareAssembly("JavascriptGraphicsProvider, Version=1.0.5227.25954, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("JavascriptGraphicsProvider");
/* interface JavascriptGraphicsProvider.CanvasInterface */ 

JSIL.MakeInterface(
  "JavascriptGraphicsProvider.CanvasInterface", true, [], function ($) {
    $.Method({}, "add_MouseMoveListeners", JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`2", [$.Object, $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single])])));
    $.Method({}, "remove_MouseMoveListeners", JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`2", [$.Object, $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single])])));
    $.Method({}, "SaveState", JSIL.MethodSignature.Void);
    $.Method({}, "RestoreState", JSIL.MethodSignature.Void);
    $.Method({}, "SetDiv", JSIL.MethodSignature.Action($.String));
    $.Method({}, "SetFont", JSIL.MethodSignature.Action($.String));
    $.Method({}, "SetClip", new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ]));
    $.Method({}, "Translate", new JSIL.MethodSignature(null, [$.Int32, $.Int32]));
    $.Method({}, "Rotate", JSIL.MethodSignature.Action($.Single));
    $.Method({}, "DrawImage", new JSIL.MethodSignature(null, [
          $.Object, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32
        ]));
    $.Method({}, "FillText", new JSIL.MethodSignature(null, [
          $.String, $.Int32, 
          $.Int32
        ]));
    $.Method({}, "MeasureTextWidth", new JSIL.MethodSignature($.Int32, [$.String]));
    $.Method({}, "GetFontHeight", new JSIL.MethodSignature($.Int32, [$.String]));
    $.Method({}, "LoadImage", new JSIL.MethodSignature(null, [$.String, $asm0B.TypeRef("System.Action`1", [$.Object])]));
    $.Method({}, "LoadTextFile", new JSIL.MethodSignature(null, [$.String, $asm0B.TypeRef("System.Action`1", [$.String])]));
    $.Method({}, "PushState", JSIL.MethodSignature.Void);
    $.Method({}, "PopState", JSIL.MethodSignature.Void);
    $.Method({}, "SetBackgroundColor", new JSIL.MethodSignature(null, [
          $.Byte, $.Byte, 
          $.Byte
        ]));
    $.Method({}, "ClearScreen", JSIL.MethodSignature.Void);
    $.Method({}, "DEBUG", JSIL.MethodSignature.Action($.String));
  }, []);

/* class JavascriptGraphicsProvider.CanvasManager */ 

(function CanvasManager$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Collections.Generic.Dictionary$b2.Of($asm0B.System.String, $asm0B.System.Int32))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0A.WWUtils.Math.Vector2$b1.Of($asm0B.System.Single))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Collections.Generic.Dictionary$b2.Of($asm0B.System.String, $asm0B.System.Object))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.System.Action$b2.Of($asm0B.System.Object, $asm0B.System.Int32))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0B.System.Threading.Interlocked)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0B.System.Delegate)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0B.System.Action$b2.Of($asm0B.System.Object, $asm0A.WWUtils.Math.Vector2$b1.Of($asm0B.System.Single)))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0B.System.Action$b1.Of($asm0B.System.Int64))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0B.System.String)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0B.System.Object)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0B.System.Int64)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0B.System.Int32)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm0B.System.Double)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize(System.Array.Of($asm0B.System.String))) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm0B.System.Action$b1.Of($asm0B.System.Object))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm0B.System.Action$b1.Of($asm0B.System.String))) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm0B.System.Single)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm0B.System.Byte)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0B.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.String"), $asm0B.TypeRef("System.Int32")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0B.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.String"), $asm0B.TypeRef("System.Object")]), null))) ();
  };

  function CanvasManager__ctor () {
    this.fontName = "14px Arial";
    this.fontHeights = $S00().Construct();
    this.tickHandle = null;
    this.mousePos = new ($T01())();
    this.imageCache = $S01().Construct();
  };

  function CanvasManager_add_MouseDownListeners (value) {
    var action = this.MouseDownListeners;

    do {
      var action2 = action;
      action = $T04().CompareExchange$b1($T03())(/* ref */ new JSIL.MemberReference(this, "MouseDownListeners"), $T05().Combine(action2, value), action);
    } while (action !== action2);
  };

  function CanvasManager_add_MouseMoveListeners (value) {
    var action = this.MouseMoveListeners;

    do {
      var action2 = action;
      action = $T04().CompareExchange$b1($T06())(/* ref */ new JSIL.MemberReference(this, "MouseMoveListeners"), $T05().Combine(action2, value), action);
    } while (action !== action2);
  };

  function CanvasManager_add_MouseScrollListeners (value) {
    var action = this.MouseScrollListeners;

    do {
      var action2 = action;
      action = $T04().CompareExchange$b1($T03())(/* ref */ new JSIL.MemberReference(this, "MouseScrollListeners"), $T05().Combine(action2, value), action);
    } while (action !== action2);
  };

  function CanvasManager_add_MouseUpListeners (value) {
    var action = this.MouseUpListeners;

    do {
      var action2 = action;
      action = $T04().CompareExchange$b1($T03())(/* ref */ new JSIL.MemberReference(this, "MouseUpListeners"), $T05().Combine(action2, value), action);
    } while (action !== action2);
  };

  function CanvasManager_add_TickListeners (value) {
    var action = this.TickListeners;

    do {
      var action2 = action;
      action = $T04().CompareExchange$b1($T07())(/* ref */ new JSIL.MemberReference(this, "TickListeners"), $T05().Combine(action2, value), action);
    } while (action !== action2);
  };

  function CanvasManager_AddToImageCache (name, imageObj) {
    (this.imageCache).set_Item(name, imageObj);
  };

  function CanvasManager_ClearScreen () {
    
				this.ctxt.clearRect(0, 0, this.ctxt.canvas.width, this.ctxt.canvas.height);
			;
  };

  function CanvasManager_CurrentTimeMS () {
    return $T0A().$Cast(Date.now());
  };

  function CanvasManager_DEBUG (s) {
    
				console.log(s);
			;
  };

  function CanvasManager_DoMouseDown (ctxt, x, y, buttonNum) {
    (this.mousePos.Vector2$b1$X$value = +x);
    (this.mousePos.Vector2$b1$Y$value = +y);
    if (this.MouseDownListeners !== null) {
      this.MouseDownListeners(ctxt, buttonNum);
    }
  };

  function CanvasManager_DoMouseMotion (ctxt, x, y) {
    (this.mousePos.Vector2$b1$X$value = +x);
    (this.mousePos.Vector2$b1$Y$value = +y);
    if (this.MouseMoveListeners !== null) {
      this.MouseMoveListeners(ctxt, new ($T01())(+x, +y));
    }
  };

  function CanvasManager_DoMouseUp (ctxt, x, y, buttonNum) {
    (this.mousePos.Vector2$b1$X$value = +x);
    (this.mousePos.Vector2$b1$Y$value = +y);
    if (this.MouseUpListeners !== null) {
      this.MouseUpListeners(ctxt, buttonNum);
    }
  };

  function CanvasManager_DoMouseWheel (ctxt, x, y, wheelDelta) {
    (this.mousePos.Vector2$b1$X$value = +x);
    (this.mousePos.Vector2$b1$Y$value = +y);
    if (this.MouseScrollListeners !== null) {
      this.MouseScrollListeners(ctxt, wheelDelta);
    }
  };

  function CanvasManager_DoTick () {
    var deltaMS = +($T0A().op_Subtraction(this.CurrentTimeMS(), this.lastTick)).ToNumber(-1, false);
    this.ClearScreen();
    if (this.TickListeners !== null) {
      this.TickListeners($T0A().FromNumber(deltaMS));
    }
    this.lastTick = this.CurrentTimeMS();
  };

  function CanvasManager_DrawImage (image, sx, sy, swidth, sheight, x, y, width, height) {
    
				var ctxt = this.ctxt;
				var image= image;
				var sx = sx;
				var sy = sy;
				var swidth=swidth;
				var sheight=sheight;
				var x=x;
				var y=y;
				var width=width
				var height=height;
				//console.log("Draw "+image+" "+sx+","+sy+","+swidth+","+sheight+
				//			" "+x+","+y+","+width+","+height);
				ctxt.drawImage(image,sx,sy,swidth,sheight,x,y,width,height);
			;
  };

  function CanvasManager_FillText (txt, x, y) {
    
				var ctxt = this.ctxt;
				var txt= txt;
				var x=x;
				var y=y; 
				ctxt.fillText(txt,x,y);
			;
  };

  function CanvasManager_GetFontHeight (fontName) {
    if (!(this.fontHeights).ContainsKey(fontName)) {
      var fontStyle = (JSIL.ConcatString.apply(null, JSIL.Array.New($T08(), ["font-family: ", this.ParseFont(fontName)[2], "; font-size: ", this.ParseFont(fontName)[0], this.ParseFont(fontName)[1], ";"])));
      (this.fontHeights).set_Item(fontName, this.MeasureFontHeight(fontStyle));
    }
    return (this.fontHeights).get_Item(fontName);
  };

  function CanvasManager_GetImageSize (jsImage) {
    var size = new ($T01())();
    
				size.X = jsImage.naturalWidth;
				size.Y = jsImage.naturalHeight;
			;
    return size;
  };

  function CanvasManager_GetMousePosition () {
    return this.mousePos;
  };

  function CanvasManager_LoadImage (imageUrl, loadedCB) {
    if ((this.imageCache).ContainsKey(imageUrl)) {
      var cacheObj = (this.imageCache).get_Item(imageUrl);
      if (cacheObj.Loaded==true) {
        loadedCB(cacheObj);
      } else {
        
						cacheObj.onloadCBList.push(loadedCB);
					;
      }
    } else {
      
					var imageObj = new Image();
					imageObj.Loaded = false;
					imageObj.onloadCBList = [loadedCB];
	      			imageObj.onload= function(){
						imageObj.Loaded=true;
	      				imageObj.onloadCBList.forEach(
							function(entry){
								entry(imageObj);
							}
						);
	      			};
					CanvasManager_AddToImageCache.call(this,loadedCB,imageObj);
					imageObj.src = imageUrl;
				;
    }
  };

  function CanvasManager_LoadTextFile (fileUrl, loadedCB) {
    
				var oReq = new XMLHttpRequest();
				oReq.onload = function(){
					loadedCB(oReq.responseText);
				}
				oReq.open("get", fileUrl,true);
				oReq.send(null);
			;
  };

  function CanvasManager_MeasureFontHeight (font) {
    
				var body = document.getElementsByTagName("body")[0];
  				var dummy = document.createElement("div");
  				var dummyText = document.createTextNode("M");
  				dummy.appendChild(dummyText);
  				dummy.setAttribute("style", font);
  				body.appendChild(dummy);
  				var height = dummy.offsetHeight;
  				body.removeChild(dummy);
				return height;
			;
    return 0;
  };

  function CanvasManager_MeasureTextWidth (txt) {
    return $T0B().$Cast(
				this.ctxt.measureText(txt).width
			);
  };

  function CanvasManager_ParseFont (fnt) {
    var results = JSIL.Array.New($T08(), 3);
    
				var matches = /([0-9]+)(pt|px)\s*([a-zA-Z]+)/g.exec(fnt);
				results[0] = matches[1];
				results[1] = matches[2];
				results[2] = matches[3];
			;
    this.DEBUG(JSIL.ConcatString("matches = ", results));
    return results;
  };

  function CanvasManager_PopState () {
    
				this.ctxt.restore();
			;
  };

  function CanvasManager_PushState () {
    
				this.ctxt.save();
			;
  };

  function CanvasManager_remove_MouseDownListeners (value) {
    var action = this.MouseDownListeners;

    do {
      var action2 = action;
      action = $T04().CompareExchange$b1($T03())(/* ref */ new JSIL.MemberReference(this, "MouseDownListeners"), $T05().Remove(action2, value), action);
    } while (action !== action2);
  };

  function CanvasManager_remove_MouseMoveListeners (value) {
    var action = this.MouseMoveListeners;

    do {
      var action2 = action;
      action = $T04().CompareExchange$b1($T06())(/* ref */ new JSIL.MemberReference(this, "MouseMoveListeners"), $T05().Remove(action2, value), action);
    } while (action !== action2);
  };

  function CanvasManager_remove_MouseScrollListeners (value) {
    var action = this.MouseScrollListeners;

    do {
      var action2 = action;
      action = $T04().CompareExchange$b1($T03())(/* ref */ new JSIL.MemberReference(this, "MouseScrollListeners"), $T05().Remove(action2, value), action);
    } while (action !== action2);
  };

  function CanvasManager_remove_MouseUpListeners (value) {
    var action = this.MouseUpListeners;

    do {
      var action2 = action;
      action = $T04().CompareExchange$b1($T03())(/* ref */ new JSIL.MemberReference(this, "MouseUpListeners"), $T05().Remove(action2, value), action);
    } while (action !== action2);
  };

  function CanvasManager_remove_TickListeners (value) {
    var action = this.TickListeners;

    do {
      var action2 = action;
      action = $T04().CompareExchange$b1($T07())(/* ref */ new JSIL.MemberReference(this, "TickListeners"), $T05().Remove(action2, value), action);
    } while (action !== action2);
  };

  function CanvasManager_RestoreState () {
    
				this.ctxt.restore();
			;
  };

  function CanvasManager_Rotate (radians) {
    
				var ctxt = this.ctxt;
				var radians= radians;
				ctxt.rotate(radians);
			;
  };

  function CanvasManager_SaveState () {
    
				this.ctxt.save();
			;
  };

  function CanvasManager_Scale (x, y) {
    
				var ctxt = this.ctxt;
				ctxt.scale(x,y);
			;
  };

  function CanvasManager_SetAnimTick (tickMS) {
    if (this.tickHandle !== null) {
      clearInterval(this.tickHandle);
      this.tickHandle = 0;
    }
    if ((tickMS | 0) > 0) {
      
					var _self = this;
					function Tick(){
						CanvasManager_DoTick.call(_self);
					}
					this.tickHandle = setInterval(Tick,tickMS);
				;
    }
    this.lastTick = this.CurrentTimeMS();
  };

  function CanvasManager_SetBackgroundColor (r, g, b) {
  };

  function CanvasManager_SetClip (x, y, width, height) {
    
				var ctxt = this.ctxt;
				var x= x;
				var y= y;
				var width=width;
				var height=height;
				ctxt.beginPath();
	      		ctxt.moveTo(x,y);
	      		ctxt.lineTo(x+width,y);
	      		ctxt.lineTo(x+width,y+height);
	      		ctxt.lineTo(x,y+height);
	      		ctxt.lineTo(x,y);
	      		ctxt.clip();
			;
  };

  function CanvasManager_SetDiv (divName) {
    this.divName = divName;
    
				var c = document.getElementById(divName);
				this.ctxt = c.getContext("2d");
				// 
				// set up mouse listeners
				var _self = this;
				function MouseMotion(canvas, evt) {
        			var rect = c.getBoundingClientRect();
          			var x = evt.clientX - rect.left;
          			var y = evt.clientY - rect.top;
					CanvasManager_DoMouseMotion.call(_self,this.ctxt,x,y);
      			}

				function MouseDown(canvas, evt) {
        			var rect = c.getBoundingClientRect();
          			var x = evt.clientX - rect.left;
          			var y = evt.clientY - rect.top;
					CanvasManager_DoMouseDown.call(_self,this.ctxt,x,y,evt.button);
      			}

				function MouseUp(canvas, evt) {
        			var rect = c.getBoundingClientRect();
          			var x = evt.clientX - rect.left;
          			var y = evt.clientY - rect.top;
					CanvasManager_DoMouseUp.call(_self,this.ctxt,x,y,evt.button);
      			}

				function MouseWheel(canvas, evt) {
        			var rect = c.getBoundingClientRect();
          			var x = evt.clientX - rect.left;
          			var y = evt.clientY - rect.top;
					CanvasManager_DoMouseWheel.call(_self,this.ctxt,x,y,evt.wheelDelta);
      			}
      
      			c.addEventListener('mousemove', function(evt) {
        			MouseMotion(this.ctxt, evt);
      			}, false);

				c.addEventListener('mousedown', function(evt) {
        			MouseDown(this.ctxt, evt);
      			}, false);

				c.addEventListener('mouseup', function(evt) {
        			MouseUp(this.ctxt, evt);
      			}, false);
				c.addEventListener('mousewheel', function(evt) {
    				MouseWheel(this.ctxt,evt);
				});
				//just for firefox which doesnt do mousewheel event
				c.addEventListener('DOMMouseScroll', function(evt) {
    				MouseWheel(this.ctxt,evt);
				});

			;
    this.SetFont(this.fontName);
  };

  function CanvasManager_SetFillColor (r, g, b) {
    
				this.ctxt.fillStyle = "rgb("+r+","+g+","+b+")";
			;
  };

  function CanvasManager_SetFont (font) {
    this.fontName = font;
    
				var ctxt = this.ctxt;
				ctxt.font = this.fontName;
			;
  };

  function CanvasManager_Translate (x, y) {
    
				var ctxt = this.ctxt;
				var x= x;
				var y= y;
				ctxt.translate(x,y);
			;
  };

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Object"), 
      Name: "JavascriptGraphicsProvider.CanvasManager", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      CanvasManager__ctor
    );

    $.Method({Static:false, Public:true }, "add_MouseDownListeners", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`2", [$.Object, $.Int32])), 
      CanvasManager_add_MouseDownListeners
    );

    $.Method({Static:false, Public:true , Virtual:true }, "add_MouseMoveListeners", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`2", [$.Object, $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single])])), 
      CanvasManager_add_MouseMoveListeners
    );

    $.Method({Static:false, Public:true }, "add_MouseScrollListeners", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`2", [$.Object, $.Int32])), 
      CanvasManager_add_MouseScrollListeners
    );

    $.Method({Static:false, Public:true }, "add_MouseUpListeners", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`2", [$.Object, $.Int32])), 
      CanvasManager_add_MouseUpListeners
    );

    $.Method({Static:false, Public:true }, "add_TickListeners", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`1", [$.Int64])), 
      CanvasManager_add_TickListeners
    );

    $.Method({Static:false, Public:false}, "AddToImageCache", 
      new JSIL.MethodSignature(null, [$.String, $.Object]), 
      CanvasManager_AddToImageCache
    );

    $.Method({Static:false, Public:true , Virtual:true }, "ClearScreen", 
      JSIL.MethodSignature.Void, 
      CanvasManager_ClearScreen
    );

    $.Method({Static:false, Public:false}, "CurrentTimeMS", 
      JSIL.MethodSignature.Return($.Int64), 
      CanvasManager_CurrentTimeMS
    );

    $.Method({Static:false, Public:true , Virtual:true }, "DEBUG", 
      JSIL.MethodSignature.Action($.String), 
      CanvasManager_DEBUG
    );

    $.Method({Static:false, Public:false}, "DoMouseDown", 
      new JSIL.MethodSignature(null, [
          $.Object, $.Int32, 
          $.Int32, $.Int32
        ]), 
      CanvasManager_DoMouseDown
    );

    $.Method({Static:false, Public:false}, "DoMouseMotion", 
      new JSIL.MethodSignature(null, [
          $.Object, $.Int32, 
          $.Int32
        ]), 
      CanvasManager_DoMouseMotion
    );

    $.Method({Static:false, Public:false}, "DoMouseUp", 
      new JSIL.MethodSignature(null, [
          $.Object, $.Int32, 
          $.Int32, $.Int32
        ]), 
      CanvasManager_DoMouseUp
    );

    $.Method({Static:false, Public:false}, "DoMouseWheel", 
      new JSIL.MethodSignature(null, [
          $.Object, $.Int32, 
          $.Int32, $.Int32
        ]), 
      CanvasManager_DoMouseWheel
    );

    $.Method({Static:false, Public:true }, "DoTick", 
      JSIL.MethodSignature.Void, 
      CanvasManager_DoTick
    );

    $.Method({Static:false, Public:true , Virtual:true }, "DrawImage", 
      new JSIL.MethodSignature(null, [
          $.Object, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32, $.Int32, 
          $.Int32
        ]), 
      CanvasManager_DrawImage
    );

    $.Method({Static:false, Public:true , Virtual:true }, "FillText", 
      new JSIL.MethodSignature(null, [
          $.String, $.Int32, 
          $.Int32
        ]), 
      CanvasManager_FillText
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetFontHeight", 
      new JSIL.MethodSignature($.Int32, [$.String]), 
      CanvasManager_GetFontHeight
    );

    $.Method({Static:false, Public:true }, "GetImageSize", 
      new JSIL.MethodSignature($asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single]), [$.Object]), 
      CanvasManager_GetImageSize
    );

    $.Method({Static:false, Public:true }, "GetMousePosition", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single])), 
      CanvasManager_GetMousePosition
    );

    $.Method({Static:false, Public:true , Virtual:true }, "LoadImage", 
      new JSIL.MethodSignature(null, [$.String, $asm0B.TypeRef("System.Action`1", [$.Object])]), 
      CanvasManager_LoadImage
    );

    $.Method({Static:false, Public:true , Virtual:true }, "LoadTextFile", 
      new JSIL.MethodSignature(null, [$.String, $asm0B.TypeRef("System.Action`1", [$.String])]), 
      CanvasManager_LoadTextFile
    );

    $.Method({Static:false, Public:false}, "MeasureFontHeight", 
      new JSIL.MethodSignature($.Int32, [$.String]), 
      CanvasManager_MeasureFontHeight
    );

    $.Method({Static:false, Public:true , Virtual:true }, "MeasureTextWidth", 
      new JSIL.MethodSignature($.Int32, [$.String]), 
      CanvasManager_MeasureTextWidth
    );

    $.Method({Static:false, Public:false}, "ParseFont", 
      new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$.String]), [$.String]), 
      CanvasManager_ParseFont
    );

    $.Method({Static:false, Public:true , Virtual:true }, "PopState", 
      JSIL.MethodSignature.Void, 
      CanvasManager_PopState
    );

    $.Method({Static:false, Public:true , Virtual:true }, "PushState", 
      JSIL.MethodSignature.Void, 
      CanvasManager_PushState
    );

    $.Method({Static:false, Public:true }, "remove_MouseDownListeners", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`2", [$.Object, $.Int32])), 
      CanvasManager_remove_MouseDownListeners
    );

    $.Method({Static:false, Public:true , Virtual:true }, "remove_MouseMoveListeners", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`2", [$.Object, $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single])])), 
      CanvasManager_remove_MouseMoveListeners
    );

    $.Method({Static:false, Public:true }, "remove_MouseScrollListeners", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`2", [$.Object, $.Int32])), 
      CanvasManager_remove_MouseScrollListeners
    );

    $.Method({Static:false, Public:true }, "remove_MouseUpListeners", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`2", [$.Object, $.Int32])), 
      CanvasManager_remove_MouseUpListeners
    );

    $.Method({Static:false, Public:true }, "remove_TickListeners", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`1", [$.Int64])), 
      CanvasManager_remove_TickListeners
    );

    $.Method({Static:false, Public:true , Virtual:true }, "RestoreState", 
      JSIL.MethodSignature.Void, 
      CanvasManager_RestoreState
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Rotate", 
      JSIL.MethodSignature.Action($.Single), 
      CanvasManager_Rotate
    );

    $.Method({Static:false, Public:true , Virtual:true }, "SaveState", 
      JSIL.MethodSignature.Void, 
      CanvasManager_SaveState
    );

    $.Method({Static:false, Public:true }, "Scale", 
      new JSIL.MethodSignature(null, [$.Single, $.Single]), 
      CanvasManager_Scale
    );

    $.Method({Static:false, Public:true }, "SetAnimTick", 
      JSIL.MethodSignature.Action($.Int32), 
      CanvasManager_SetAnimTick
    );

    $.Method({Static:false, Public:true , Virtual:true }, "SetBackgroundColor", 
      new JSIL.MethodSignature(null, [
          $.Byte, $.Byte, 
          $.Byte
        ]), 
      CanvasManager_SetBackgroundColor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "SetClip", 
      new JSIL.MethodSignature(null, [
          $.Int32, $.Int32, 
          $.Int32, $.Int32
        ]), 
      CanvasManager_SetClip
    );

    $.Method({Static:false, Public:true , Virtual:true }, "SetDiv", 
      JSIL.MethodSignature.Action($.String), 
      CanvasManager_SetDiv
    );

    $.Method({Static:false, Public:true }, "SetFillColor", 
      new JSIL.MethodSignature(null, [
          $.Byte, $.Byte, 
          $.Byte
        ]), 
      CanvasManager_SetFillColor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "SetFont", 
      JSIL.MethodSignature.Action($.String), 
      CanvasManager_SetFont
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Translate", 
      new JSIL.MethodSignature(null, [$.Int32, $.Int32]), 
      CanvasManager_Translate
    );

    $.Field({Static:false, Public:false}, "ctxt", $.Object); 
    $.Field({Static:false, Public:false}, "divName", $.String); 
    $.Field({Static:false, Public:false}, "fontName", $.String); 
    $.Field({Static:false, Public:false}, "fontHeights", $asm0B.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Int32])); 
    $.Field({Static:false, Public:false}, "tickHandle", $.Object); 
    $.Field({Static:false, Public:false}, "lastTick", $.Int64); 
    $.Field({Static:false, Public:false}, "mousePos", $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single])); 
    $.Field({Static:false, Public:false}, "MouseDownListeners", $asm0B.TypeRef("System.Action`2", [$.Object, $.Int32])); 
    $.Field({Static:false, Public:false}, "MouseUpListeners", $asm0B.TypeRef("System.Action`2", [$.Object, $.Int32])); 
    $.Field({Static:false, Public:false}, "MouseScrollListeners", $asm0B.TypeRef("System.Action`2", [$.Object, $.Int32])); 
    $.Field({Static:false, Public:false}, "MouseMoveListeners", $asm0B.TypeRef("System.Action`2", [$.Object, $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single])])); 
    $.Field({Static:false, Public:false}, "TickListeners", $asm0B.TypeRef("System.Action`1", [$.Int64])); 
    $.Field({Static:false, Public:false}, "imageCache", $asm0B.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Object])); 
    $.Event({Static:false, Public:true }, "MouseDownListeners", $asm0B.TypeRef("System.Action`2", [$.Object, $.Int32]));

    $.Event({Static:false, Public:true }, "MouseUpListeners", $asm0B.TypeRef("System.Action`2", [$.Object, $.Int32]));

    $.Event({Static:false, Public:true }, "MouseScrollListeners", $asm0B.TypeRef("System.Action`2", [$.Object, $.Int32]));

    $.Event({Static:false, Public:true , Virtual:true }, "MouseMoveListeners", $asm0B.TypeRef("System.Action`2", [$.Object, $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single])]));

    $.Event({Static:false, Public:true }, "TickListeners", $asm0B.TypeRef("System.Action`1", [$.Int64]));

    $.ImplementInterfaces(
      /* 0 */ $asm02.TypeRef("JavascriptGraphicsProvider.CanvasInterface")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class JavascriptGraphicsProvider.GraphicsProviderImpl */ 

(function GraphicsProviderImpl$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Collections.Generic.Dictionary$b2.Of($asm0B.System.String, $asm00.AnyGUI.CatalogImpl))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm02.JavascriptGraphicsProvider.CanvasManager)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0B.System.Action$b2.Of($asm0B.System.Object, $asm0B.System.Int32))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0B.System.Action$b2.Of($asm0B.System.Object, $asm0A.WWUtils.Math.Vector2$b1.Of($asm0B.System.Single)))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0B.System.Object)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0B.System.Action$b1.Of($asm0B.System.Int32))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm0A.WWUtils.Math.Vector2$b1.Of($asm0B.System.Single))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.AnyGUI.GuiComponent)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm0B.System.Action$b1.Of($asm0A.WWUtils.Math.Vector2$b1.Of($asm0B.System.Single)))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0B.System.Delegate)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm0B.System.Action$b1.Of($asm00.AnyGUI.Catalog))) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm02.JavascriptGraphicsProvider.GraphicsProviderImpl_$lGetCatalog$gc__AnonStorey2)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.AnyGUI.CatalogImpl)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm0B.System.Action$b1.Of($asm0B.System.String))) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm0A.WWUtils.Math.Vector3$b1.Of($asm0B.System.Single))) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm0B.System.Action$b1.Of($asm00.AnyGUI.Drawspace))) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm00.AnyGUI.Drawspace)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm02.JavascriptGraphicsProvider.DrawspaceImpl)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm0B.System.Action$b1.Of($asm00.AnyGUI.Font))) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm02.JavascriptGraphicsProvider.FontImpl)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm0B.System.Action$b1.Of($asm00.AnyGUI.Image))) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm02.JavascriptGraphicsProvider.GraphicsProviderImpl_$lGetImage$gc__AnonStorey0)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm02.JavascriptGraphicsProvider.ImageImpl)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm0B.System.Action$b1.Of($asm0B.System.Object))) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm0A.WWUtils.Math.Rect$b1.Of($asm0B.System.Single))) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm02.JavascriptGraphicsProvider.GraphicsProviderImpl_$lGetImage$gc__AnonStorey1)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0B.TypeRef("System.Collections.Generic.Dictionary`2", [$asm0B.TypeRef("System.String"), $asm00.TypeRef("AnyGUI.CatalogImpl")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("AnyGUI.CatalogImpl"), null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm00.AnyGUI.GuiComponent.DoDrag)) ();
  };

  function GraphicsProviderImpl__ctor (updateTickMS, canvasDivName) {
    this.catalogCache = $S00().Construct();
    this._mouseDownListeners = null;
    this._mouseUpListeners = null;
    this._mouseMoveListeners = null;
    this.mgr = new ($T03())();
    (this.mgr).SetDiv(canvasDivName);
    (this.mgr).add_MouseDownListeners($T04().New(this, $thisType.prototype.$lGraphicsProviderImpl$gm__0, function () { return JSIL.GetMethodInfo($thisType, "$lGraphicsProviderImpl$gm__0", new JSIL.MethodSignature(null, [$asm0B.System.Object, $asm0B.System.Int32]), false); }));
    (this.mgr).add_MouseUpListeners($T04().New(this, $thisType.prototype.$lGraphicsProviderImpl$gm__1, function () { return JSIL.GetMethodInfo($thisType, "$lGraphicsProviderImpl$gm__1", new JSIL.MethodSignature(null, [$asm0B.System.Object, $asm0B.System.Int32]), false); }));
    (this.mgr).add_MouseMoveListeners($T05().New(this, $thisType.prototype.$lGraphicsProviderImpl$gm__2, function () { return JSIL.GetMethodInfo($thisType, "$lGraphicsProviderImpl$gm__2", new JSIL.MethodSignature(null, [$asm0B.System.Object, $asm0A.WWUtils.Math.Vector2$b1.Of($asm0B.System.Single)]), false); }));
    (this.mgr).add_MouseScrollListeners($T04().New(this, $thisType.prototype.$lGraphicsProviderImpl$gm__3, function () { return JSIL.GetMethodInfo($thisType, "$lGraphicsProviderImpl$gm__3", new JSIL.MethodSignature(null, [$asm0B.System.Object, $asm0B.System.Int32]), false); }));
    (this.mgr).SetAnimTick(updateTickMS);
  };

  function GraphicsProviderImpl_$lGraphicsProviderImpl$gm__0 (ctxt, buttonNum) {
    if (this._mouseDownListeners !== null) {
      this._mouseDownListeners(buttonNum);
    }
  };

  function GraphicsProviderImpl_$lGraphicsProviderImpl$gm__1 (ctxt, buttonNum) {
    if ((buttonNum | 0) === 0) {
      this.set_CurrentlyHeldObject(null);
    }
    if (this._mouseUpListeners !== null) {
      this._mouseUpListeners(buttonNum);
    }
  };

  function GraphicsProviderImpl_$lGraphicsProviderImpl$gm__2 (ctxt, pos) {
    if (this.get_CurrentlyHeldObject() !== null) {
      $IM00().Call(this.get_CurrentlyHeldObject(), null, $T08().op_Subtraction(new ($T08())(pos.Vector2$b1$X$value, pos.Vector2$b1$Y$value), this.lastMousePos).MemberwiseClone());
    }
    if (this._mouseMoveListeners !== null) {
      this._mouseMoveListeners(pos.MemberwiseClone());
    }
    this.lastMousePos = pos.MemberwiseClone();
  };

  function GraphicsProviderImpl_$lGraphicsProviderImpl$gm__3 (ctxt, wheeldelta) {
    if (this._mouseScrollListeners !== null) {
      this._mouseScrollListeners(wheeldelta);
    }
  };

  function GraphicsProviderImpl_add_MouseDownListeners (value) {
    if (this._mouseDownListeners === null) {
      this._mouseDownListeners = value;
    } else {
      this._mouseDownListeners = $T0B().Combine(value, this._mouseDownListeners);
    }
  };

  function GraphicsProviderImpl_add_MouseMoveListeners (value) {
    if (this._mouseMoveListeners === null) {
      this._mouseMoveListeners = value;
    } else {
      this._mouseMoveListeners = $T0B().Combine(value, this._mouseMoveListeners);
    }
  };

  function GraphicsProviderImpl_add_MouseScrollListeners (value) {
    if (this._mouseScrollListeners === null) {
      this._mouseScrollListeners = value;
    } else {
      this._mouseScrollListeners = $T0B().Combine(value, this._mouseScrollListeners);
    }
  };

  function GraphicsProviderImpl_add_MouseUpListeners (value) {
    if (this._mouseUpListeners === null) {
      this._mouseUpListeners = value;
    } else {
      this._mouseUpListeners = $T0B().Combine(value, this._mouseUpListeners);
    }
  };

  function GraphicsProviderImpl_DEBUG (msg) {
    (this.mgr).DEBUG(msg);
  };

  function GraphicsProviderImpl_get_CurrentlyHeldObject () {
    return this.GraphicsProviderImpl$CurrentlyHeldObject$value;
  };

  function GraphicsProviderImpl_get_MousePosition () {
    return (this.mgr).GetMousePosition();
  };

  function GraphicsProviderImpl_GetCatalog (name, loadedCB) {
    var $lGetCatalog$gc__AnonStorey = new ($T0D())();
    $lGetCatalog$gc__AnonStorey.$name = name;
    $lGetCatalog$gc__AnonStorey.loadedCB = loadedCB;
    $lGetCatalog$gc__AnonStorey.$this = this;
    if ((this.catalogCache).ContainsKey($lGetCatalog$gc__AnonStorey.$name)) {
      $lGetCatalog$gc__AnonStorey.catalog = (this.catalogCache).get_Item($lGetCatalog$gc__AnonStorey.$name);
      $lGetCatalog$gc__AnonStorey.loadedCB($lGetCatalog$gc__AnonStorey.catalog);
    } else {
      $lGetCatalog$gc__AnonStorey.catalog = $S01().Construct();
      (this.mgr).LoadTextFile(("Content/" + $lGetCatalog$gc__AnonStorey.$name + ".cat"), $T0F().New($lGetCatalog$gc__AnonStorey, $T0D().prototype.$l$gm__0, function () { return JSIL.GetMethodInfo($asm02.JavascriptGraphicsProvider.GraphicsProviderImpl_$lGetCatalog$gc__AnonStorey2, "$l$gm__0", JSIL.MethodSignature.Action($.String), false); }));
    }
    return $lGetCatalog$gc__AnonStorey.catalog;
  };

  function GraphicsProviderImpl_GetDefaultCatalog (loadedCB) {
    return this.GetCatalog("default", loadedCB);
  };

  function GraphicsProviderImpl_GetDrawspace (position, size, loadedCB) {
    var ds = new ($T13())(this.mgr, position, size);
    if (loadedCB !== null) {
      loadedCB(ds);
    }
    return ds;
  };

  function GraphicsProviderImpl_GetFont (fontname, loadedCB) {
    var font = new ($T15())(this.mgr, fontname);
    if (loadedCB !== null) {
      loadedCB(font);
    }
    return font;
  };

  function GraphicsProviderImpl_GetImage$00 (filename, loadedCB) {
    var $lGetImage$gc__AnonStorey = new ($T17())();
    $lGetImage$gc__AnonStorey.loadedCB = loadedCB;
    $lGetImage$gc__AnonStorey.$this = this;
    $lGetImage$gc__AnonStorey.img = new ($T18())();
    (this.mgr).LoadImage(JSIL.ConcatString("Content/", filename), $T19().New($lGetImage$gc__AnonStorey, $T17().prototype.$l$gm__0, function () { return JSIL.GetMethodInfo($asm02.JavascriptGraphicsProvider.GraphicsProviderImpl_$lGetImage$gc__AnonStorey0, "$l$gm__0", JSIL.MethodSignature.Action($.Object), false); }));
    return $lGetImage$gc__AnonStorey.img;
  };

  function GraphicsProviderImpl_GetImage$01 (filename, source, loadedCB) {
    var $lGetImage$gc__AnonStorey = new ($T1B())();
    $lGetImage$gc__AnonStorey.source = source;
    $lGetImage$gc__AnonStorey.loadedCB = loadedCB;
    $lGetImage$gc__AnonStorey.img = new ($T18())();
    (this.mgr).LoadImage(JSIL.ConcatString("Content/", filename), $T19().New($lGetImage$gc__AnonStorey, $T1B().prototype.$l$gm__0, function () { return JSIL.GetMethodInfo($asm02.JavascriptGraphicsProvider.GraphicsProviderImpl_$lGetImage$gc__AnonStorey1, "$l$gm__0", JSIL.MethodSignature.Action($.Object), false); }));
    return $lGetImage$gc__AnonStorey.img;
  };

  function GraphicsProviderImpl_remove_MouseDownListeners (value) {
    this._mouseDownListeners = $T0B().Remove(this._mouseDownListeners, value);
  };

  function GraphicsProviderImpl_remove_MouseMoveListeners (value) {
    this._mouseMoveListeners = $T0B().Remove(this._mouseMoveListeners, value);
  };

  function GraphicsProviderImpl_remove_MouseScrollListeners (value) {
    this._mouseScrollListeners = $T0B().Remove(this._mouseScrollListeners, value);
  };

  function GraphicsProviderImpl_remove_MouseUpListeners (value) {
    this._mouseUpListeners = $T0B().Remove(this._mouseUpListeners, value);
  };

  function GraphicsProviderImpl_set_CurrentlyHeldObject (value) {
    this.GraphicsProviderImpl$CurrentlyHeldObject$value = value;
  };

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Object"), 
      Name: "JavascriptGraphicsProvider.GraphicsProviderImpl", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Int32, $.String]), 
      GraphicsProviderImpl__ctor
    );

    $.Method({Static:false, Public:false}, "$lGraphicsProviderImpl$gm__0", 
      new JSIL.MethodSignature(null, [$.Object, $.Int32]), 
      GraphicsProviderImpl_$lGraphicsProviderImpl$gm__0
    )
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "$lGraphicsProviderImpl$gm__1", 
      new JSIL.MethodSignature(null, [$.Object, $.Int32]), 
      GraphicsProviderImpl_$lGraphicsProviderImpl$gm__1
    )
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "$lGraphicsProviderImpl$gm__2", 
      new JSIL.MethodSignature(null, [$.Object, $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single])]), 
      GraphicsProviderImpl_$lGraphicsProviderImpl$gm__2
    )
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "$lGraphicsProviderImpl$gm__3", 
      new JSIL.MethodSignature(null, [$.Object, $.Int32]), 
      GraphicsProviderImpl_$lGraphicsProviderImpl$gm__3
    )
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "add_MouseDownListeners", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`1", [$.Int32])), 
      GraphicsProviderImpl_add_MouseDownListeners
    );

    $.Method({Static:false, Public:true , Virtual:true }, "add_MouseMoveListeners", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`1", [$asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single])])), 
      GraphicsProviderImpl_add_MouseMoveListeners
    );

    $.Method({Static:false, Public:true , Virtual:true }, "add_MouseScrollListeners", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`1", [$.Int32])), 
      GraphicsProviderImpl_add_MouseScrollListeners
    );

    $.Method({Static:false, Public:true , Virtual:true }, "add_MouseUpListeners", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`1", [$.Int32])), 
      GraphicsProviderImpl_add_MouseUpListeners
    );

    $.Method({Static:false, Public:true , Virtual:true }, "DEBUG", 
      JSIL.MethodSignature.Action($.String), 
      GraphicsProviderImpl_DEBUG
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_CurrentlyHeldObject", 
      JSIL.MethodSignature.Return($asm00.TypeRef("AnyGUI.GuiComponent")), 
      GraphicsProviderImpl_get_CurrentlyHeldObject
    )
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "get_MousePosition", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single])), 
      GraphicsProviderImpl_get_MousePosition
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetCatalog", 
      new JSIL.MethodSignature($asm00.TypeRef("AnyGUI.Catalog"), [$.String, $asm0B.TypeRef("System.Action`1", [$asm00.TypeRef("AnyGUI.Catalog")])]), 
      GraphicsProviderImpl_GetCatalog
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetDefaultCatalog", 
      new JSIL.MethodSignature($asm00.TypeRef("AnyGUI.Catalog"), [$asm0B.TypeRef("System.Action`1", [$asm00.TypeRef("AnyGUI.Catalog")])]), 
      GraphicsProviderImpl_GetDefaultCatalog
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetDrawspace", 
      new JSIL.MethodSignature($asm00.TypeRef("AnyGUI.Drawspace"), [
          $asm0A.TypeRef("WWUtils.Math.Vector3`1", [$.Single]), $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single]), 
          $asm0B.TypeRef("System.Action`1", [$asm00.TypeRef("AnyGUI.Drawspace")])
        ]), 
      GraphicsProviderImpl_GetDrawspace
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetFont", 
      new JSIL.MethodSignature($asm00.TypeRef("AnyGUI.Font"), [$.String, $asm0B.TypeRef("System.Action`1", [$asm00.TypeRef("AnyGUI.Font")])]), 
      GraphicsProviderImpl_GetFont
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetImage", 
      new JSIL.MethodSignature($asm00.TypeRef("AnyGUI.Image"), [$.String, $asm0B.TypeRef("System.Action`1", [$asm00.TypeRef("AnyGUI.Image")])]), 
      GraphicsProviderImpl_GetImage$00
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetImage", 
      new JSIL.MethodSignature($asm00.TypeRef("AnyGUI.Image"), [
          $.String, $asm0A.TypeRef("WWUtils.Math.Rect`1", [$.Single]), 
          $asm0B.TypeRef("System.Action`1", [$asm00.TypeRef("AnyGUI.Image")])
        ]), 
      GraphicsProviderImpl_GetImage$01
    );

    $.Method({Static:false, Public:true , Virtual:true }, "remove_MouseDownListeners", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`1", [$.Int32])), 
      GraphicsProviderImpl_remove_MouseDownListeners
    );

    $.Method({Static:false, Public:true , Virtual:true }, "remove_MouseMoveListeners", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`1", [$asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single])])), 
      GraphicsProviderImpl_remove_MouseMoveListeners
    );

    $.Method({Static:false, Public:true , Virtual:true }, "remove_MouseScrollListeners", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`1", [$.Int32])), 
      GraphicsProviderImpl_remove_MouseScrollListeners
    );

    $.Method({Static:false, Public:true , Virtual:true }, "remove_MouseUpListeners", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`1", [$.Int32])), 
      GraphicsProviderImpl_remove_MouseUpListeners
    );

    $.Method({Static:false, Public:true , Virtual:true }, "set_CurrentlyHeldObject", 
      JSIL.MethodSignature.Action($asm00.TypeRef("AnyGUI.GuiComponent")), 
      GraphicsProviderImpl_set_CurrentlyHeldObject
    )
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "mgr", $asm02.TypeRef("JavascriptGraphicsProvider.CanvasManager")); 
    $.Field({Static:false, Public:false}, "GraphicsProviderImpl$CurrentlyHeldObject$value", $asm00.TypeRef("AnyGUI.GuiComponent"))
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "lastMousePos", $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single])); 
    $.Field({Static:false, Public:false}, "catalogCache", $asm0B.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm00.TypeRef("AnyGUI.CatalogImpl")])); 
    $.Field({Static:false, Public:false}, "_mouseDownListeners", $asm0B.TypeRef("System.Action`1", [$.Int32])); 
    $.Field({Static:false, Public:false}, "_mouseUpListeners", $asm0B.TypeRef("System.Action`1", [$.Int32])); 
    $.Field({Static:false, Public:false}, "_mouseMoveListeners", $asm0B.TypeRef("System.Action`1", [$asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single])])); 
    $.Field({Static:false, Public:false}, "_mouseScrollListeners", $asm0B.TypeRef("System.Action`1", [$.Int32])); 
    $.Property({Static:false, Public:true , Virtual:true }, "CurrentlyHeldObject", $asm00.TypeRef("AnyGUI.GuiComponent"));

    $.Property({Static:false, Public:true , Virtual:true }, "MousePosition", $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single]));

    $.Event({Static:false, Public:true , Virtual:true }, "MouseDownListeners", $asm0B.TypeRef("System.Action`1", [$.Int32]));

    $.Event({Static:false, Public:true , Virtual:true }, "MouseUpListeners", $asm0B.TypeRef("System.Action`1", [$.Int32]));

    $.Event({Static:false, Public:true , Virtual:true }, "MouseMoveListeners", $asm0B.TypeRef("System.Action`1", [$asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single])]));

    $.Event({Static:false, Public:true , Virtual:true }, "MouseScrollListeners", $asm0B.TypeRef("System.Action`1", [$.Int32]));

    $.ImplementInterfaces(
      /* 0 */ $asm00.TypeRef("AnyGUI.GraphicsProvider")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class JavascriptGraphicsProvider.GraphicsProviderImpl+<GetImage>c__AnonStorey0 */ 

(function $lGetImage$gc__AnonStorey0$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm02.JavascriptGraphicsProvider.ImageImpl)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0A.WWUtils.Math.Vector2$b1.Of($asm0B.System.Single))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm02.JavascriptGraphicsProvider.CanvasManager)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0A.WWUtils.Math.Rect$b1.Of($asm0B.System.Single))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0B.System.Action$b1.Of($asm00.AnyGUI.Image))) ();
  };

  function $lGetImage$gc__AnonStorey0__ctor () {
  };

  function $lGetImage$gc__AnonStorey0_$l$gm__0 (jsImage) {
    this.img.ImageImpl$JSImage$value = jsImage;
    var sz = (this.$this.mgr).GetImageSize(jsImage).MemberwiseClone();
    (this.img.ImageImpl$subimage$value = new ($T04())(0, 0, sz.Vector2$b1$X$value, sz.Vector2$b1$Y$value));
    (this.img).set_Loaded(true);
    if (this.loadedCB !== null) {
      this.loadedCB(this.img);
    }
  };

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Object"), 
      Name: "JavascriptGraphicsProvider.GraphicsProviderImpl+<GetImage>c__AnonStorey0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $lGetImage$gc__AnonStorey0__ctor
    );

    $.Method({Static:false, Public:false}, "$l$gm__0", 
      JSIL.MethodSignature.Action($.Object), 
      $lGetImage$gc__AnonStorey0_$l$gm__0
    );

    $.Field({Static:false, Public:false}, "img", $asm02.TypeRef("JavascriptGraphicsProvider.ImageImpl")); 
    $.Field({Static:false, Public:false}, "loadedCB", $asm0B.TypeRef("System.Action`1", [$asm00.TypeRef("AnyGUI.Image")])); 
    $.Field({Static:false, Public:false}, "$this", $asm02.TypeRef("JavascriptGraphicsProvider.GraphicsProviderImpl")); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class JavascriptGraphicsProvider.GraphicsProviderImpl+<GetImage>c__AnonStorey1 */ 

(function $lGetImage$gc__AnonStorey1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm02.JavascriptGraphicsProvider.ImageImpl)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Action$b1.Of($asm00.AnyGUI.Image))) ();
  };

  function $lGetImage$gc__AnonStorey1__ctor () {
  };

  function $lGetImage$gc__AnonStorey1_$l$gm__0 (jsImage) {
    this.img.ImageImpl$JSImage$value = jsImage;
    (this.img.ImageImpl$subimage$value = this.source.MemberwiseClone());
    (this.img).set_Loaded(true);
    if (this.loadedCB !== null) {
      this.loadedCB(this.img);
    }
  };

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Object"), 
      Name: "JavascriptGraphicsProvider.GraphicsProviderImpl+<GetImage>c__AnonStorey1", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $lGetImage$gc__AnonStorey1__ctor
    );

    $.Method({Static:false, Public:false}, "$l$gm__0", 
      JSIL.MethodSignature.Action($.Object), 
      $lGetImage$gc__AnonStorey1_$l$gm__0
    );

    $.Field({Static:false, Public:false}, "img", $asm02.TypeRef("JavascriptGraphicsProvider.ImageImpl")); 
    $.Field({Static:false, Public:false}, "source", $asm0A.TypeRef("WWUtils.Math.Rect`1", [$.Single])); 
    $.Field({Static:false, Public:false}, "loadedCB", $asm0B.TypeRef("System.Action`1", [$asm00.TypeRef("AnyGUI.Image")])); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class JavascriptGraphicsProvider.GraphicsProviderImpl+<GetCatalog>c__AnonStorey2 */ 

(function $lGetCatalog$gc__AnonStorey2$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.AnyGUI.CatalogImpl)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.IO.MemoryStream)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.System.Text.Encoding)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0B.System.Collections.Generic.Dictionary$b2.Of($asm0B.System.String, $asm00.AnyGUI.CatalogImpl))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0B.System.Action$b1.Of($asm00.AnyGUI.Catalog))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm0B.TypeRef("System.IO.MemoryStream"), [$jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Byte")])]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm0B.TypeRef("System.Byte")]), [$asm0B.TypeRef("System.String")]))) ();
  };

  function $lGetCatalog$gc__AnonStorey2__ctor () {
  };

  function $lGetCatalog$gc__AnonStorey2_$l$gm__0 (txt) {
    (this.catalog).SetXML($S00().Construct($S01().CallVirtual("GetBytes", null, $T03().get_UTF8(), JSIL.Coalesce(txt, ""))));
    (this.$this.catalogCache).set_Item(this.$name, this.catalog);
    if (this.loadedCB !== null) {
      this.loadedCB(this.catalog);
    }
  };

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Object"), 
      Name: "JavascriptGraphicsProvider.GraphicsProviderImpl+<GetCatalog>c__AnonStorey2", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $lGetCatalog$gc__AnonStorey2__ctor
    );

    $.Method({Static:false, Public:false}, "$l$gm__0", 
      JSIL.MethodSignature.Action($.String), 
      $lGetCatalog$gc__AnonStorey2_$l$gm__0
    );

    $.Field({Static:false, Public:false}, "catalog", $asm00.TypeRef("AnyGUI.CatalogImpl")); 
    $.Field({Static:false, Public:false}, "$name", $.String); 
    $.Field({Static:false, Public:false}, "loadedCB", $asm0B.TypeRef("System.Action`1", [$asm00.TypeRef("AnyGUI.Catalog")])); 
    $.Field({Static:false, Public:false}, "$this", $asm02.TypeRef("JavascriptGraphicsProvider.GraphicsProviderImpl")); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class JavascriptGraphicsProvider.ImageImpl */ 

(function ImageImpl$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm0B.System.Action$b1.Of($asm00.AnyGUI.Image))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.Threading.Interlocked)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0B.System.Delegate)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0A.WWUtils.Math.Rect$b1.Of($asm0B.System.Single))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0A.WWUtils.Math.Vector2$b1.Of($asm0B.System.Single))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0B.System.Object)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0B.System.Boolean)) ();
  };

  function ImageImpl__ctor () {
    this.set_Loaded(false);
    this.ImageImpl$JSImage$value = null;
  };

  function ImageImpl_add_LoadedCB (value) {
    var action = this.LoadedCB;

    do {
      var action2 = action;
      action = $T01().CompareExchange$b1($T00())(/* ref */ new JSIL.MemberReference(this, "LoadedCB"), $T02().Combine(action2, value), action);
    } while (action !== action2);
  };

  function ImageImpl_get_JSImage () {
    return this.ImageImpl$JSImage$value;
  };

  function ImageImpl_get_Loaded () {
    return this.ImageImpl$Loaded$value;
  };

  function ImageImpl_get_Size () {
    return this.ImageImpl$subimage$value.size;
  };

  function ImageImpl_get_Source () {
    return this.ImageImpl$subimage$value;
  };

  function ImageImpl_get_subimage () {
    return this.ImageImpl$subimage$value;
  };

  function ImageImpl_GetSubImage (subImageSpace) {
    return (new $thisType()).__Initialize__({
        JSImage: this.ImageImpl$JSImage$value, 
        subimage: new ($T03())((+this.ImageImpl$subimage$value.position.Vector2$b1$X$value + +subImageSpace.position.Vector2$b1$X$value), (+this.ImageImpl$subimage$value.position.Vector2$b1$Y$value + +subImageSpace.position.Vector2$b1$Y$value), subImageSpace.size.Vector2$b1$X$value, subImageSpace.size.Vector2$b1$Y$value), 
        Loaded: true}
    );
  };

  function ImageImpl_remove_LoadedCB (value) {
    var action = this.LoadedCB;

    do {
      var action2 = action;
      action = $T01().CompareExchange$b1($T00())(/* ref */ new JSIL.MemberReference(this, "LoadedCB"), $T02().Remove(action2, value), action);
    } while (action !== action2);
  };

  function ImageImpl_set_JSImage (value) {
    this.ImageImpl$JSImage$value = value;
  };

  function ImageImpl_set_Loaded (value) {
    this.ImageImpl$Loaded$value = value;
  };

  function ImageImpl_set_subimage (value) {
    this.ImageImpl$subimage$value = value;
  };

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Object"), 
      Name: "JavascriptGraphicsProvider.ImageImpl", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ImageImpl__ctor
    );

    $.Method({Static:false, Public:true }, "add_LoadedCB", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`1", [$asm00.TypeRef("AnyGUI.Image")])), 
      ImageImpl_add_LoadedCB
    );

    $.Method({Static:false, Public:true }, "get_JSImage", 
      JSIL.MethodSignature.Return($.Object), 
      ImageImpl_get_JSImage
    )
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "get_Loaded", 
      JSIL.MethodSignature.Return($.Boolean), 
      ImageImpl_get_Loaded
    )
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "get_Size", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single])), 
      ImageImpl_get_Size
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Source", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("WWUtils.Math.Rect`1", [$.Single])), 
      ImageImpl_get_Source
    );

    $.Method({Static:false, Public:true }, "get_subimage", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("WWUtils.Math.Rect`1", [$.Single])), 
      ImageImpl_get_subimage
    )
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "GetSubImage", 
      new JSIL.MethodSignature($asm00.TypeRef("AnyGUI.Image"), [$asm0A.TypeRef("WWUtils.Math.Rect`1", [$.Single])]), 
      ImageImpl_GetSubImage
    );

    $.Method({Static:false, Public:true }, "remove_LoadedCB", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`1", [$asm00.TypeRef("AnyGUI.Image")])), 
      ImageImpl_remove_LoadedCB
    );

    $.Method({Static:false, Public:false}, "set_JSImage", 
      JSIL.MethodSignature.Action($.Object), 
      ImageImpl_set_JSImage
    )
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Loaded", 
      JSIL.MethodSignature.Action($.Boolean), 
      ImageImpl_set_Loaded
    )
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_subimage", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("WWUtils.Math.Rect`1", [$.Single])), 
      ImageImpl_set_subimage
    )
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "ImageImpl$JSImage$value", $.Object)
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "ImageImpl$subimage$value", $asm0A.TypeRef("WWUtils.Math.Rect`1", [$.Single]))
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "ImageImpl$Loaded$value", $.Boolean)
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Field({Static:false, Public:false}, "LoadedCB", $asm0B.TypeRef("System.Action`1", [$asm00.TypeRef("AnyGUI.Image")])); 
    $.Property({Static:false, Public:true }, "JSImage", $.Object);

    $.Property({Static:false, Public:true }, "subimage", $asm0A.TypeRef("WWUtils.Math.Rect`1", [$.Single]));

    $.Property({Static:false, Public:true , Virtual:true }, "Source", $asm0A.TypeRef("WWUtils.Math.Rect`1", [$.Single]));

    $.Property({Static:false, Public:true , Virtual:true }, "Size", $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single]));

    $.Property({Static:false, Public:true , Virtual:true }, "Loaded", $.Boolean);

    $.Event({Static:false, Public:true }, "LoadedCB", $asm0B.TypeRef("System.Action`1", [$asm00.TypeRef("AnyGUI.Image")]));

    $.ImplementInterfaces(
      /* 0 */ $asm00.TypeRef("AnyGUI.Image"), 
      /* 1 */ $asm00.TypeRef("AnyGUI.AsyncObject")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class JavascriptGraphicsProvider.DrawspaceImpl */ 

(function DrawspaceImpl$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.JavascriptGraphicsProvider.CanvasManager)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0A.WWUtils.Math.Vector3$b1.Of($asm0B.System.Single))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0A.WWUtils.Math.Vector2$b1.Of($asm0B.System.Single))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm0B.System.Action$b1.Of($asm0B.System.Int64))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm0B.System.Int64)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm0B.System.Action$b1.Of($asm00.AnyGUI.Drawspace))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm0B.System.Threading.Interlocked)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm0B.System.Delegate)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.AnyGUI.Image)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm0B.System.Single)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm02.JavascriptGraphicsProvider.ImageImpl)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm0A.WWUtils.Math.Rect$b1.Of($asm0B.System.Single))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm0B.System.Math)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm0B.System.Double)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.AnyGUI.Font)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm0B.System.String)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm0A.WWUtils.Math.Vector3$b1.Of($asm0B.System.Byte))) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm02.JavascriptGraphicsProvider.FontImpl)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature(null, [
        $asm00.TypeRef("AnyGUI.Image"), $asm0A.TypeRef("WWUtils.Math.Rect`1", [$asm0B.TypeRef("System.Single")]), 
        $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$asm0B.TypeRef("System.Single")]), $asm0B.TypeRef("System.Single")
      ]))) ();
  };

  function DrawspaceImpl__ctor (cmgr, position, size) {
    this.mgr = cmgr;
    this.pos = position;
    this.sz = size;
    (this.mgr).add_TickListeners($T03().New(this, $thisType.prototype.$lDrawspaceImpl$gm__0, function () { return JSIL.GetMethodInfo($thisType, "$lDrawspaceImpl$gm__0", JSIL.MethodSignature.Action($.Int64), false); }));
  };

  function DrawspaceImpl_$lDrawspaceImpl$gm__0 (deltaMS) {
    this.Update(deltaMS);
    this.Draw();
  };

  function DrawspaceImpl_add_DrawListeners (value) {
    var action = this.DrawListeners;

    do {
      var action2 = action;
      action = $T06().CompareExchange$b1($T05())(/* ref */ new JSIL.MemberReference(this, "DrawListeners"), $T07().Combine(action2, value), action);
    } while (action !== action2);
  };

  function DrawspaceImpl_add_UpdateListeners (value) {
    var action = this.UpdateListeners;

    do {
      var action2 = action;
      action = $T06().CompareExchange$b1($T03())(/* ref */ new JSIL.MemberReference(this, "UpdateListeners"), $T07().Combine(action2, value), action);
    } while (action !== action2);
  };

  function DrawspaceImpl_Draw () {
    (this.mgr).PushState();
    this.DrawListeners(this);
    (this.mgr).PopState();
  };

  function DrawspaceImpl_DrawImage$00 (image, position, Handle, rotation) {
    this.DrawImage(
      image, 
      position, 
      Handle, 
      rotation, 
      new ($T02())(1, 1)
    );
  };

  function DrawspaceImpl_DrawImage$01 (image, position, Handle, rotation, scale) {
    var img = $T0A().$As(image);
    $S00().CallVirtual("DrawImage", null, this, image, new ($T0B())(position.Vector2$b1$X$value, position.Vector2$b1$Y$value, (+img.ImageImpl$subimage$value.size.Vector2$b1$X$value * +scale.Vector2$b1$X$value), (+img.ImageImpl$subimage$value.size.Vector2$b1$Y$value * +scale.Vector2$b1$Y$value)), Handle, rotation);
  };

  function DrawspaceImpl_DrawImage$02 (image, destinationRect) {
    $S00().CallVirtual("DrawImage", null, this, image, destinationRect, new ($T02())(0, 0), 0);
  };

  function DrawspaceImpl_DrawImage$03 (image, destinationRect, Handle, rotation) {
    (this.mgr).PushState();
    (this.mgr).Translate(((-((Handle.Vector2$b1$X$value) | 0)) | 0), ((-((Handle.Vector2$b1$Y$value) | 0)) | 0));
    (this.mgr).Rotate(rotation);
    var img = $T0A().$As(image);
    (this.mgr).DrawImage(
      img.ImageImpl$JSImage$value, 
      ((img.ImageImpl$subimage$value.position.Vector2$b1$X$value) | 0), 
      ((img.ImageImpl$subimage$value.position.Vector2$b1$Y$value) | 0), 
      ((Math.round(img.ImageImpl$subimage$value.size.Vector2$b1$X$value)) | 0), 
      ((Math.round(img.ImageImpl$subimage$value.size.Vector2$b1$Y$value)) | 0), 
      ((destinationRect.position.Vector2$b1$X$value) | 0), 
      ((destinationRect.position.Vector2$b1$Y$value) | 0), 
      ((Math.round(destinationRect.size.Vector2$b1$X$value)) | 0), 
      ((Math.round(destinationRect.size.Vector2$b1$Y$value)) | 0)
    );
    (this.mgr).PopState();
  };

  function DrawspaceImpl_DrawText$04 (font, text, position, Handle, rotation) {
    this.DrawText(
      font, 
      text, 
      position, 
      Handle, 
      rotation, 
      new ($T02())(1, 1), 
      new ($T10())(255, 255, 255)
    );
  };

  function DrawspaceImpl_DrawText$05 (font, text, position, Handle, rotation, scale, color) {
    var fnt = $T11().$As(font);
    (this.mgr).PushState();
    (this.mgr).SetFont(fnt.FontImpl$Name$value);
    (this.mgr).SetFillColor(color.Vector3$b1$X$value, color.Vector3$b1$Y$value, color.Vector3$b1$Z$value);
    (this.mgr).Translate(((-((Handle.Vector2$b1$X$value) | 0)) | 0), ((-((Handle.Vector2$b1$Y$value) | 0)) | 0));
    (this.mgr).Rotate(rotation);
    (this.mgr).Scale(scale.Vector2$b1$X$value, scale.Vector2$b1$Y$value);
    (this.mgr).FillText(text, ((position.Vector2$b1$X$value) | 0), ((+position.Vector2$b1$Y$value + +((this.mgr).GetFontHeight(fnt.FontImpl$Name$value))) | 0));
    (this.mgr).PopState();
  };

  function DrawspaceImpl_get_Clip () {
    return this._clip;
  };

  function DrawspaceImpl_get_Loaded () {
    return true;
  };

  function DrawspaceImpl_get_Position () {
    return $T02().op_Implicit(this.pos.MemberwiseClone());
  };

  function DrawspaceImpl_get_Size () {
    return this.sz;
  };

  function DrawspaceImpl_remove_DrawListeners (value) {
    var action = this.DrawListeners;

    do {
      var action2 = action;
      action = $T06().CompareExchange$b1($T05())(/* ref */ new JSIL.MemberReference(this, "DrawListeners"), $T07().Remove(action2, value), action);
    } while (action !== action2);
  };

  function DrawspaceImpl_remove_UpdateListeners (value) {
    var action = this.UpdateListeners;

    do {
      var action2 = action;
      action = $T06().CompareExchange$b1($T03())(/* ref */ new JSIL.MemberReference(this, "UpdateListeners"), $T07().Remove(action2, value), action);
    } while (action !== action2);
  };

  function DrawspaceImpl_RestoreGraphicsState () {
    (this.mgr).RestoreState();
  };

  function DrawspaceImpl_SaveGraphicsState () {
    (this.mgr).SaveState();
  };

  function DrawspaceImpl_set_Clip (value) {
    (this.mgr).SetClip(((value.position.Vector2$b1$X$value) | 0), ((value.position.Vector2$b1$Y$value) | 0), ((Math.ceil(value.size.Vector2$b1$X$value)) | 0), ((Math.ceil(value.size.Vector2$b1$Y$value)) | 0));
    this._clip = value.MemberwiseClone();
  };

  function DrawspaceImpl_set_Position (value) {
    this.pos = $T01().op_Implicit(value);
  };

  function DrawspaceImpl_set_Size (value) {
    this.sz = value;
  };

  function DrawspaceImpl_Update (deltaSec) {
    this.UpdateListeners(deltaSec);
  };

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Object"), 
      Name: "JavascriptGraphicsProvider.DrawspaceImpl", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm02.TypeRef("JavascriptGraphicsProvider.CanvasManager"), $asm0A.TypeRef("WWUtils.Math.Vector3`1", [$.Single]), 
          $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single])
        ]), 
      DrawspaceImpl__ctor
    );

    $.Method({Static:false, Public:false}, "$lDrawspaceImpl$gm__0", 
      JSIL.MethodSignature.Action($.Int64), 
      DrawspaceImpl_$lDrawspaceImpl$gm__0
    )
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "add_DrawListeners", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`1", [$asm00.TypeRef("AnyGUI.Drawspace")])), 
      DrawspaceImpl_add_DrawListeners
    );

    $.Method({Static:false, Public:true , Virtual:true }, "add_UpdateListeners", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`1", [$.Int64])), 
      DrawspaceImpl_add_UpdateListeners
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Draw", 
      JSIL.MethodSignature.Void, 
      DrawspaceImpl_Draw
    );

    $.Method({Static:false, Public:true , Virtual:true }, "DrawImage", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("AnyGUI.Image"), $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single]), 
          $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single]), $.Single
        ]), 
      DrawspaceImpl_DrawImage$00
    );

    $.Method({Static:false, Public:true , Virtual:true }, "DrawImage", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("AnyGUI.Image"), $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single]), 
          $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single]), $.Single, 
          $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single])
        ]), 
      DrawspaceImpl_DrawImage$01
    );

    $.Method({Static:false, Public:true , Virtual:true }, "DrawImage", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("AnyGUI.Image"), $asm0A.TypeRef("WWUtils.Math.Rect`1", [$.Single])]), 
      DrawspaceImpl_DrawImage$02
    );

    $.Method({Static:false, Public:true , Virtual:true }, "DrawImage", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("AnyGUI.Image"), $asm0A.TypeRef("WWUtils.Math.Rect`1", [$.Single]), 
          $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single]), $.Single
        ]), 
      DrawspaceImpl_DrawImage$03
    );

    $.Method({Static:false, Public:true , Virtual:true }, "DrawText", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("AnyGUI.Font"), $.String, 
          $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single]), $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single]), 
          $.Single
        ]), 
      DrawspaceImpl_DrawText$04
    );

    $.Method({Static:false, Public:true , Virtual:true }, "DrawText", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("AnyGUI.Font"), $.String, 
          $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single]), $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single]), 
          $.Single, $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single]), 
          $asm0A.TypeRef("WWUtils.Math.Vector3`1", [$.Byte])
        ]), 
      DrawspaceImpl_DrawText$05
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Clip", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("WWUtils.Math.Rect`1", [$.Single])), 
      DrawspaceImpl_get_Clip
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Loaded", 
      JSIL.MethodSignature.Return($.Boolean), 
      DrawspaceImpl_get_Loaded
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Position", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single])), 
      DrawspaceImpl_get_Position
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Size", 
      JSIL.MethodSignature.Return($asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single])), 
      DrawspaceImpl_get_Size
    );

    $.Method({Static:false, Public:true , Virtual:true }, "remove_DrawListeners", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`1", [$asm00.TypeRef("AnyGUI.Drawspace")])), 
      DrawspaceImpl_remove_DrawListeners
    );

    $.Method({Static:false, Public:true , Virtual:true }, "remove_UpdateListeners", 
      JSIL.MethodSignature.Action($asm0B.TypeRef("System.Action`1", [$.Int64])), 
      DrawspaceImpl_remove_UpdateListeners
    );

    $.Method({Static:false, Public:true , Virtual:true }, "RestoreGraphicsState", 
      JSIL.MethodSignature.Void, 
      DrawspaceImpl_RestoreGraphicsState
    );

    $.Method({Static:false, Public:true , Virtual:true }, "SaveGraphicsState", 
      JSIL.MethodSignature.Void, 
      DrawspaceImpl_SaveGraphicsState
    );

    $.Method({Static:false, Public:true , Virtual:true }, "set_Clip", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("WWUtils.Math.Rect`1", [$.Single])), 
      DrawspaceImpl_set_Clip
    );

    $.Method({Static:false, Public:true , Virtual:true }, "set_Position", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single])), 
      DrawspaceImpl_set_Position
    );

    $.Method({Static:false, Public:true , Virtual:true }, "set_Size", 
      JSIL.MethodSignature.Action($asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single])), 
      DrawspaceImpl_set_Size
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Update", 
      JSIL.MethodSignature.Action($.Int64), 
      DrawspaceImpl_Update
    );

    $.Field({Static:false, Public:false}, "mgr", $asm02.TypeRef("JavascriptGraphicsProvider.CanvasManager")); 
    $.Field({Static:false, Public:false}, "pos", $asm0A.TypeRef("WWUtils.Math.Vector3`1", [$.Single])); 
    $.Field({Static:false, Public:false}, "sz", $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single])); 
    $.Field({Static:false, Public:false}, "_clip", $asm0A.TypeRef("WWUtils.Math.Rect`1", [$.Single])); 
    $.Field({Static:false, Public:false}, "UpdateListeners", $asm0B.TypeRef("System.Action`1", [$.Int64])); 
    $.Field({Static:false, Public:false}, "DrawListeners", $asm0B.TypeRef("System.Action`1", [$asm00.TypeRef("AnyGUI.Drawspace")])); 
    $.Property({Static:false, Public:true , Virtual:true }, "Position", $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single]));

    $.Property({Static:false, Public:true , Virtual:true }, "Size", $asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single]));

    $.Property({Static:false, Public:true , Virtual:true }, "Clip", $asm0A.TypeRef("WWUtils.Math.Rect`1", [$.Single]));

    $.Property({Static:false, Public:true , Virtual:true }, "Loaded", $.Boolean);

    $.Event({Static:false, Public:true , Virtual:true }, "UpdateListeners", $asm0B.TypeRef("System.Action`1", [$.Int64]));

    $.Event({Static:false, Public:true , Virtual:true }, "DrawListeners", $asm0B.TypeRef("System.Action`1", [$asm00.TypeRef("AnyGUI.Drawspace")]));

    $.ImplementInterfaces(
      /* 0 */ $asm00.TypeRef("AnyGUI.Drawspace"), 
      /* 1 */ $asm00.TypeRef("AnyGUI.AsyncObject")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class JavascriptGraphicsProvider.FontImpl */ 

(function FontImpl$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.JavascriptGraphicsProvider.CanvasManager)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm0B.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm0A.WWUtils.Math.Vector2$b1.Of($asm0B.System.Single))) ();
  };

  function FontImpl__ctor (cmgr, fontname) {
    this.FontImpl$Name$value = fontname;
    this.mgr = cmgr;
  };

  function FontImpl_get_Loaded () {
    return true;
  };

  function FontImpl_get_Name () {
    return this.FontImpl$Name$value;
  };

  function FontImpl_MeasureText (text) {
    (this.mgr).PushState();
    (this.mgr).SetFont(this.FontImpl$Name$value);
    var sz = new ($T02())(+((this.mgr).MeasureTextWidth(text)), +((this.mgr).GetFontHeight(this.FontImpl$Name$value)));
    (this.mgr).PopState();
    return sz;
  };

  function FontImpl_set_Name (value) {
    this.FontImpl$Name$value = value;
  };

  JSIL.MakeType({
      BaseType: $asm0B.TypeRef("System.Object"), 
      Name: "JavascriptGraphicsProvider.FontImpl", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm02.TypeRef("JavascriptGraphicsProvider.CanvasManager"), $.String]), 
      FontImpl__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Loaded", 
      JSIL.MethodSignature.Return($.Boolean), 
      FontImpl_get_Loaded
    );

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      FontImpl_get_Name
    )
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "MeasureText", 
      new JSIL.MethodSignature($asm0A.TypeRef("WWUtils.Math.Vector2`1", [$.Single]), [$.String]), 
      FontImpl_MeasureText
    );

    $.Method({Static:false, Public:false}, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      FontImpl_set_Name
    )
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Field({Static:false, Public:false}, "mgr", $asm02.TypeRef("JavascriptGraphicsProvider.CanvasManager")); 
    $.Field({Static:false, Public:false}, "FontImpl$Name$value", $.String)
      .Attribute($asm0B.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true , Virtual:true }, "Loaded", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm00.TypeRef("AnyGUI.Font"), 
      /* 1 */ $asm00.TypeRef("AnyGUI.AsyncObject")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

